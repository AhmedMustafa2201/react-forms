// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FormControls /> should add missing buttons if not defined in button order 1`] = `
<ContextWrapper>
  <ReactFinalForm
    onSubmit={[MockFunction]}
  >
    <FormControls
      buttonOrder={Array []}
      canReset={true}
      canSubmit={true}
      cancelLabel="Cancel"
      onCancel={[MockFunction]}
      onReset={[MockFunction]}
      onSubmit={[MockFunction]}
      pristine={true}
      resetLabel="Reset"
      submitLabel="Submit"
    >
      <ReactFinalForm(FormSpy)>
        <FormSpy
          reactFinalForm={
            Object {
              "batch": [Function],
              "blur": [Function],
              "change": [Function],
              "destroyOnUnregister": false,
              "focus": [Function],
              "getFieldState": [Function],
              "getRegisteredFields": [Function],
              "getState": [Function],
              "initialize": [Function],
              "isValidationPaused": [Function],
              "mutators": Object {},
              "pauseValidation": [Function],
              "registerField": [Function],
              "reset": [Function],
              "resetFieldState": [Function],
              "resumeValidation": [Function],
              "setConfig": [Function],
              "submit": [Function],
              "subscribe": [Function],
            }
          }
        >
          <Component>
            <div>
              <Component
                key="form-submit"
                label="Submit"
                onClick={[Function]}
                type="button"
                variant="primary"
              >
                <button
                  onClick={[Function]}
                  type="button"
                  variant="primary"
                >
                  Submit
                </button>
              </Component>
              <Component
                disabled={true}
                key="form-reset"
                label="Reset"
                onClick={[Function]}
                type="button"
              >
                <button
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                >
                  Reset
                </button>
              </Component>
              <Component
                key="form-cancel"
                label="Cancel"
                onClick={[Function]}
                type="button"
              >
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Cancel
                </button>
              </Component>
            </div>
          </Component>
        </FormSpy>
      </ReactFinalForm(FormSpy)>
    </FormControls>
  </ReactFinalForm>
</ContextWrapper>
`;

exports[`<FormControls /> should render all controls and with default labels 1`] = `
<ContextWrapper>
  <ReactFinalForm
    onSubmit={[MockFunction]}
  >
    <FormControls
      buttonOrder={
        Array [
          "submit",
          "reset",
          "cancel",
        ]
      }
      canReset={true}
      canSubmit={false}
      cancelLabel="Cancel"
      disableSubmit={true}
      onCancel={[MockFunction]}
      onReset={[MockFunction]}
      onSubmit={[MockFunction]}
      pristine={true}
      resetLabel="Reset"
      submitLabel="Submit"
    >
      <ReactFinalForm(FormSpy)>
        <FormSpy
          reactFinalForm={
            Object {
              "batch": [Function],
              "blur": [Function],
              "change": [Function],
              "destroyOnUnregister": false,
              "focus": [Function],
              "getFieldState": [Function],
              "getRegisteredFields": [Function],
              "getState": [Function],
              "initialize": [Function],
              "isValidationPaused": [Function],
              "mutators": Object {},
              "pauseValidation": [Function],
              "registerField": [Function],
              "reset": [Function],
              "resetFieldState": [Function],
              "resumeValidation": [Function],
              "setConfig": [Function],
              "submit": [Function],
              "subscribe": [Function],
            }
          }
        >
          <Component>
            <div>
              <Component
                disabled={true}
                key="form-submit"
                label="Submit"
                onClick={[Function]}
                type="button"
                variant="primary"
              >
                <button
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                  variant="primary"
                >
                  Submit
                </button>
              </Component>
              <Component
                disabled={true}
                key="form-reset"
                label="Reset"
                onClick={[Function]}
                type="button"
              >
                <button
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                >
                  Reset
                </button>
              </Component>
              <Component
                key="form-cancel"
                label="Cancel"
                onClick={[Function]}
                type="button"
              >
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Cancel
                </button>
              </Component>
            </div>
          </Component>
        </FormSpy>
      </ReactFinalForm(FormSpy)>
    </FormControls>
  </ReactFinalForm>
</ContextWrapper>
`;

exports[`<FormControls /> should render buttons in correct order 1`] = `
<ContextWrapper>
  <ReactFinalForm
    onSubmit={[MockFunction]}
  >
    <FormControls
      buttonOrder={
        Array [
          "cancel",
          "submit",
          "reset",
        ]
      }
      canReset={true}
      canSubmit={true}
      cancelLabel="Cancel"
      onCancel={[MockFunction]}
      onReset={[MockFunction]}
      onSubmit={[MockFunction]}
      pristine={true}
      resetLabel="Reset"
      submitLabel="Submit"
    >
      <ReactFinalForm(FormSpy)>
        <FormSpy
          reactFinalForm={
            Object {
              "batch": [Function],
              "blur": [Function],
              "change": [Function],
              "destroyOnUnregister": false,
              "focus": [Function],
              "getFieldState": [Function],
              "getRegisteredFields": [Function],
              "getState": [Function],
              "initialize": [Function],
              "isValidationPaused": [Function],
              "mutators": Object {},
              "pauseValidation": [Function],
              "registerField": [Function],
              "reset": [Function],
              "resetFieldState": [Function],
              "resumeValidation": [Function],
              "setConfig": [Function],
              "submit": [Function],
              "subscribe": [Function],
            }
          }
        >
          <Component>
            <div>
              <Component
                key="form-cancel"
                label="Cancel"
                onClick={[Function]}
                type="button"
              >
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Cancel
                </button>
              </Component>
              <Component
                key="form-submit"
                label="Submit"
                onClick={[Function]}
                type="button"
                variant="primary"
              >
                <button
                  onClick={[Function]}
                  type="button"
                  variant="primary"
                >
                  Submit
                </button>
              </Component>
              <Component
                disabled={true}
                key="form-reset"
                label="Reset"
                onClick={[Function]}
                type="button"
              >
                <button
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                >
                  Reset
                </button>
              </Component>
            </div>
          </Component>
        </FormSpy>
      </ReactFinalForm(FormSpy)>
    </FormControls>
  </ReactFinalForm>
</ContextWrapper>
`;

exports[`<FormControls /> should render only submit button 1`] = `
<ContextWrapper>
  <ReactFinalForm
    onSubmit={[MockFunction]}
  >
    <FormControls
      buttonOrder={
        Array [
          "submit",
          "reset",
          "cancel",
        ]
      }
      canReset={false}
      canSubmit={false}
      cancelLabel="Cancel"
      onReset={[MockFunction]}
      onSubmit={[MockFunction]}
      pristine={true}
      resetLabel="Reset"
      submitLabel="Submit"
    >
      <ReactFinalForm(FormSpy)>
        <FormSpy
          reactFinalForm={
            Object {
              "batch": [Function],
              "blur": [Function],
              "change": [Function],
              "destroyOnUnregister": false,
              "focus": [Function],
              "getFieldState": [Function],
              "getRegisteredFields": [Function],
              "getState": [Function],
              "initialize": [Function],
              "isValidationPaused": [Function],
              "mutators": Object {},
              "pauseValidation": [Function],
              "registerField": [Function],
              "reset": [Function],
              "resetFieldState": [Function],
              "resumeValidation": [Function],
              "setConfig": [Function],
              "submit": [Function],
              "subscribe": [Function],
            }
          }
        >
          <Component>
            <div>
              <Component
                key="form-submit"
                label="Submit"
                onClick={[Function]}
                type="button"
                variant="primary"
              >
                <button
                  onClick={[Function]}
                  type="button"
                  variant="primary"
                >
                  Submit
                </button>
              </Component>
            </div>
          </Component>
        </FormSpy>
      </ReactFinalForm(FormSpy)>
    </FormControls>
  </ReactFinalForm>
</ContextWrapper>
`;
