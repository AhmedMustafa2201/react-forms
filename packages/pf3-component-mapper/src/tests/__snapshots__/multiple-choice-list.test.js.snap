// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MultipleChoiceList /> should render correctly 1`] = `
<MultipleChoiceList
  FieldProvider={[Function]}
  options={
    Array [
      Object {
        "label": "Foo",
        "value": 0,
      },
      Object {
        "label": "Bar",
        "value": 1,
      },
    ]
  }
>
  <MultipleChoiceList
    Checkbox={[Function]}
    FieldProvider={[Function]}
    Wrapper={[Function]}
    options={
      Array [
        Object {
          "label": "Foo",
          "value": 0,
        },
        Object {
          "label": "Bar",
          "value": 1,
        },
      ]
    }
  >
    <FieldProvider
      options={
        Array [
          Object {
            "label": "Foo",
            "value": 0,
          },
          Object {
            "label": "Bar",
            "value": 1,
          },
        ]
      }
      render={[Function]}
      validate={[Function]}
    >
      <MockFieldProvider
        input={
          Object {
            "onChange": [MockFunction],
            "value": Array [],
          }
        }
        options={
          Array [
            Object {
              "label": "Foo",
              "value": 0,
            },
            Object {
              "label": "Bar",
              "value": 1,
            },
          ]
        }
        render={[Function]}
        validate={[Function]}
      >
        <Wrapper
          meta={Object {}}
          rest={
            Object {
              "children": undefined,
              "input": Object {
                "onChange": [MockFunction],
                "value": Array [],
              },
              "validate": [Function],
            }
          }
        >
          <FormGroup
            bsClass="form-group"
            validationState={null}
          >
            <div
              className="form-group"
            >
              <ControlLabel
                bsClass="control-label"
                srOnly={false}
              >
                <label
                  className="control-label"
                />
              </ControlLabel>
              <div>
                <FieldProvider
                  id="undefined-0"
                  key="0"
                  label="Foo"
                  render={[Function]}
                  type="checkbox"
                  value={0}
                >
                  <MockFieldProvider
                    id="undefined-0"
                    input={
                      Object {
                        "onChange": [MockFunction],
                        "value": Array [],
                      }
                    }
                    label="Foo"
                    render={[Function]}
                    type="checkbox"
                    value={0}
                  >
                    <FinalCheckbox
                      aria-label="Foo"
                      id="undefined-0"
                      label="Foo"
                      onChange={[Function]}
                      type="checkbox"
                      value={0}
                    >
                      <Checkbox
                        aria-label="Foo"
                        bsClass="checkbox"
                        disabled={false}
                        id="undefined-0"
                        inline={false}
                        onChange={[Function]}
                        title=""
                        type="checkbox"
                        value={0}
                      >
                        <div
                          className="checkbox"
                        >
                          <label
                            title=""
                          >
                            <input
                              aria-label="Foo"
                              disabled={false}
                              id="undefined-0"
                              onChange={[Function]}
                              type="checkbox"
                              value={0}
                            />
                            Foo
                          </label>
                        </div>
                      </Checkbox>
                    </FinalCheckbox>
                  </MockFieldProvider>
                </FieldProvider>
                <FieldProvider
                  id="undefined-1"
                  key="1"
                  label="Bar"
                  render={[Function]}
                  type="checkbox"
                  value={1}
                >
                  <MockFieldProvider
                    id="undefined-1"
                    input={
                      Object {
                        "onChange": [MockFunction],
                        "value": 1,
                      }
                    }
                    label="Bar"
                    render={[Function]}
                    type="checkbox"
                    value={1}
                  >
                    <FinalCheckbox
                      aria-label="Bar"
                      id="undefined-1"
                      label="Bar"
                      onChange={[Function]}
                      type="checkbox"
                      value={1}
                    >
                      <Checkbox
                        aria-label="Bar"
                        bsClass="checkbox"
                        disabled={false}
                        id="undefined-1"
                        inline={false}
                        onChange={[Function]}
                        title=""
                        type="checkbox"
                        value={1}
                      >
                        <div
                          className="checkbox"
                        >
                          <label
                            title=""
                          >
                            <input
                              aria-label="Bar"
                              disabled={false}
                              id="undefined-1"
                              onChange={[Function]}
                              type="checkbox"
                              value={1}
                            />
                            Bar
                          </label>
                        </div>
                      </Checkbox>
                    </FinalCheckbox>
                  </MockFieldProvider>
                </FieldProvider>
              </div>
            </div>
          </FormGroup>
        </Wrapper>
      </MockFieldProvider>
    </FieldProvider>
  </MultipleChoiceList>
</MultipleChoiceList>
`;

exports[`<MultipleChoiceList /> should render in error state 1`] = `
<MultipleChoiceList
  FieldProvider={[Function]}
  options={
    Array [
      Object {
        "label": "Foo",
        "value": 0,
      },
      Object {
        "label": "Bar",
        "value": 1,
      },
    ]
  }
>
  <MultipleChoiceList
    Checkbox={[Function]}
    FieldProvider={[Function]}
    Wrapper={[Function]}
    options={
      Array [
        Object {
          "label": "Foo",
          "value": 0,
        },
        Object {
          "label": "Bar",
          "value": 1,
        },
      ]
    }
  >
    <FieldProvider
      options={
        Array [
          Object {
            "label": "Foo",
            "value": 0,
          },
          Object {
            "label": "Bar",
            "value": 1,
          },
        ]
      }
      render={[Function]}
      validate={[Function]}
    >
      <MockFieldProvider
        input={
          Object {
            "onChange": [MockFunction],
            "value": Array [],
          }
        }
        meta={
          Object {
            "error": "Error message",
            "touched": true,
          }
        }
        options={
          Array [
            Object {
              "label": "Foo",
              "value": 0,
            },
            Object {
              "label": "Bar",
              "value": 1,
            },
          ]
        }
        render={[Function]}
        validate={[Function]}
      >
        <Wrapper
          error="Error message"
          meta={
            Object {
              "error": "Error message",
              "touched": true,
            }
          }
          rest={
            Object {
              "children": undefined,
              "input": Object {
                "onChange": [MockFunction],
                "value": Array [],
              },
              "validate": [Function],
            }
          }
          showError="Error message"
        >
          <FormGroup
            bsClass="form-group"
            validationState="error"
          >
            <div
              className="form-group has-error"
            >
              <ControlLabel
                bsClass="control-label"
                srOnly={false}
              >
                <label
                  className="control-label"
                />
              </ControlLabel>
              <div>
                <FieldProvider
                  id="undefined-0"
                  key="0"
                  label="Foo"
                  render={[Function]}
                  type="checkbox"
                  value={0}
                >
                  <MockFieldProvider
                    id="undefined-0"
                    input={
                      Object {
                        "onChange": [MockFunction],
                        "value": Array [],
                      }
                    }
                    label="Foo"
                    meta={
                      Object {
                        "error": "Error message",
                        "touched": true,
                      }
                    }
                    render={[Function]}
                    type="checkbox"
                    value={0}
                  >
                    <FinalCheckbox
                      aria-label="Foo"
                      id="undefined-0"
                      label="Foo"
                      onChange={[Function]}
                      type="checkbox"
                      value={0}
                    >
                      <Checkbox
                        aria-label="Foo"
                        bsClass="checkbox"
                        disabled={false}
                        id="undefined-0"
                        inline={false}
                        onChange={[Function]}
                        title=""
                        type="checkbox"
                        value={0}
                      >
                        <div
                          className="checkbox"
                        >
                          <label
                            title=""
                          >
                            <input
                              aria-label="Foo"
                              disabled={false}
                              id="undefined-0"
                              onChange={[Function]}
                              type="checkbox"
                              value={0}
                            />
                            Foo
                          </label>
                        </div>
                      </Checkbox>
                    </FinalCheckbox>
                  </MockFieldProvider>
                </FieldProvider>
                <FieldProvider
                  id="undefined-1"
                  key="1"
                  label="Bar"
                  render={[Function]}
                  type="checkbox"
                  value={1}
                >
                  <MockFieldProvider
                    id="undefined-1"
                    input={
                      Object {
                        "onChange": [MockFunction],
                        "value": Array [],
                      }
                    }
                    label="Bar"
                    meta={
                      Object {
                        "error": "Error message",
                        "touched": true,
                      }
                    }
                    render={[Function]}
                    type="checkbox"
                    value={1}
                  >
                    <FinalCheckbox
                      aria-label="Bar"
                      id="undefined-1"
                      label="Bar"
                      onChange={[Function]}
                      type="checkbox"
                      value={1}
                    >
                      <Checkbox
                        aria-label="Bar"
                        bsClass="checkbox"
                        disabled={false}
                        id="undefined-1"
                        inline={false}
                        onChange={[Function]}
                        title=""
                        type="checkbox"
                        value={1}
                      >
                        <div
                          className="checkbox"
                        >
                          <label
                            title=""
                          >
                            <input
                              aria-label="Bar"
                              disabled={false}
                              id="undefined-1"
                              onChange={[Function]}
                              type="checkbox"
                              value={1}
                            />
                            Bar
                          </label>
                        </div>
                      </Checkbox>
                    </FinalCheckbox>
                  </MockFieldProvider>
                </FieldProvider>
              </div>
              <HelpBlock
                bsClass="help-block"
              >
                <span
                  className="help-block"
                >
                  Error message
                </span>
              </HelpBlock>
            </div>
          </FormGroup>
        </Wrapper>
      </MockFieldProvider>
    </FieldProvider>
  </MultipleChoiceList>
</MultipleChoiceList>
`;
