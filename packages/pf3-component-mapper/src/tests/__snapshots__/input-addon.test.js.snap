// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Input Addon> should render group button before input addon correctly 1`] = `
<FormRenderer
  buttonClassName=""
  buttonsLabels={Object {}}
  clearOnUnmount={false}
  disableSubmit={Array []}
  formFieldsMapper={
    Object {
      "button": [Function],
      "checkbox": [Function],
      "date-picker": [Function],
      "input-addon-button-group": [Function],
      "input-addon-group": [Function],
      "plain-text": [Function],
      "radio": [Function],
      "select-field": [Function],
      "sub-form": [Function],
      "switch-field": [Function],
      "tabs": [Function],
      "text-field": [Function],
      "textarea-field": [Function],
      "time-picker": [Function],
      "wizard": [Function],
    }
  }
  initialValues={Object {}}
  layoutMapper={
    Object {
      "Button": [Function],
      "ButtonGroup": [Function],
      "Description": [Function],
      "FormWrapper": [Function],
      "Title": [Function],
    }
  }
  onCancel={[Function]}
  onSubmit={[MockFunction]}
  schema={
    Object {
      "fields": Array [
        Object {
          "component": "text-field",
          "inputAddon": Object {
            "before": Object {
              "fields": Array [
                Object {
                  "component": "input-addon-button-group",
                  "fields": Array [
                    Object {
                      "component": "button",
                      "label": "Set 1",
                      "name": "set1",
                      "onClick": [Function],
                    },
                    Object {
                      "component": "button",
                      "label": "Set 2",
                      "name": "set2",
                    },
                  ],
                  "name": "i-a-g-2",
                },
              ],
            },
          },
          "label": "Text Box With Input Addon",
          "name": "text_box_21",
          "title": "Text Box With Input Addon",
        },
      ],
    }
  }
  showFormControls={false}
>
  <ReactFinalForm
    decorators={
      Array [
        [Function],
      ]
    }
    initialValues={Object {}}
    mutators={
      Object {
        "concat": [Function],
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "removeBatch": [Function],
        "shift": [Function],
        "swap": [Function],
        "unshift": [Function],
        "update": [Function],
      }
    }
    onSubmit={[MockFunction]}
    render={[Function]}
    subscription={
      Object {
        "pristine": true,
        "submitting": true,
        "valid": true,
      }
    }
  >
    <FormWapper
      onSubmit={[Function]}
    >
      <Form
        bsClass="form"
        componentClass="form"
        horizontal={false}
        inline={false}
        onSubmit={[Function]}
      >
        <form
          className=""
          onSubmit={[Function]}
        >
          <FormConditionWrapper>
            <FormFieldHideWrapper
              hideField={false}
            >
              <FieldWrapper
                component={[Function]}
                componentType="text-field"
                formOptions={
                  Object {
                    "batch": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearOnUnmount": false,
                    "clearedValue": undefined,
                    "concat": [Function],
                    "destroyOnUnregister": false,
                    "focus": [Function],
                    "getFieldState": [Function],
                    "getRegisteredFields": [Function],
                    "getState": [Function],
                    "handleSubmit": [Function],
                    "initialize": [Function],
                    "insert": [Function],
                    "isValidationPaused": [Function],
                    "move": [Function],
                    "onCancel": [Function],
                    "onSubmit": [MockFunction],
                    "pauseValidation": [Function],
                    "pop": [Function],
                    "pristine": true,
                    "push": [Function],
                    "registerField": [Function],
                    "remove": [Function],
                    "removeBatch": [Function],
                    "renderForm": [Function],
                    "reset": [Function],
                    "resetFieldState": [Function],
                    "resumeValidation": [Function],
                    "setConfig": [Function],
                    "shift": [Function],
                    "submit": [Function],
                    "subscribe": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                    "update": [Function],
                    "valid": true,
                  }
                }
                inputAddon={
                  Object {
                    "before": Object {
                      "fields": Array [
                        Object {
                          "component": "input-addon-button-group",
                          "fields": Array [
                            Object {
                              "component": "button",
                              "label": "Set 1",
                              "name": "set1",
                              "onClick": [Function],
                            },
                            Object {
                              "component": "button",
                              "label": "Set 2",
                              "name": "set2",
                            },
                          ],
                          "name": "i-a-g-2",
                        },
                      ],
                    },
                  }
                }
                label="Text Box With Input Addon"
                name="text_box_21"
                title="Text Box With Input Addon"
                validate={
                  Array [
                    undefined,
                  ]
                }
              >
                <FieldProvider
                  FieldArrayProvider={[Function]}
                  FieldProvider={[Function]}
                  component={[Function]}
                  formOptions={
                    Object {
                      "batch": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearOnUnmount": false,
                      "clearedValue": undefined,
                      "concat": [Function],
                      "destroyOnUnregister": false,
                      "focus": [Function],
                      "getFieldState": [Function],
                      "getRegisteredFields": [Function],
                      "getState": [Function],
                      "handleSubmit": [Function],
                      "initialize": [Function],
                      "insert": [Function],
                      "isValidationPaused": [Function],
                      "move": [Function],
                      "onCancel": [Function],
                      "onSubmit": [MockFunction],
                      "pauseValidation": [Function],
                      "pop": [Function],
                      "pristine": true,
                      "push": [Function],
                      "registerField": [Function],
                      "remove": [Function],
                      "removeBatch": [Function],
                      "renderForm": [Function],
                      "reset": [Function],
                      "resetFieldState": [Function],
                      "resumeValidation": [Function],
                      "setConfig": [Function],
                      "shift": [Function],
                      "submit": [Function],
                      "subscribe": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                      "update": [Function],
                      "valid": true,
                    }
                  }
                  inputAddon={
                    Object {
                      "before": Object {
                        "fields": Array [
                          Object {
                            "component": "input-addon-button-group",
                            "fields": Array [
                              Object {
                                "component": "button",
                                "label": "Set 1",
                                "name": "set1",
                                "onClick": [Function],
                              },
                              Object {
                                "component": "button",
                                "label": "Set 2",
                                "name": "set2",
                              },
                            ],
                            "name": "i-a-g-2",
                          },
                        ],
                      },
                    }
                  }
                  label="Text Box With Input Addon"
                  name="text_box_21"
                  title="Text Box With Input Addon"
                  validate={[Function]}
                >
                  <ReactFinalForm(Field)
                    FieldArrayProvider={[Function]}
                    FieldProvider={[Function]}
                    formOptions={
                      Object {
                        "batch": [Function],
                        "blur": [Function],
                        "change": [Function],
                        "clearOnUnmount": false,
                        "clearedValue": undefined,
                        "concat": [Function],
                        "destroyOnUnregister": false,
                        "focus": [Function],
                        "getFieldState": [Function],
                        "getRegisteredFields": [Function],
                        "getState": [Function],
                        "handleSubmit": [Function],
                        "initialize": [Function],
                        "insert": [Function],
                        "isValidationPaused": [Function],
                        "move": [Function],
                        "onCancel": [Function],
                        "onSubmit": [MockFunction],
                        "pauseValidation": [Function],
                        "pop": [Function],
                        "pristine": true,
                        "push": [Function],
                        "registerField": [Function],
                        "remove": [Function],
                        "removeBatch": [Function],
                        "renderForm": [Function],
                        "reset": [Function],
                        "resetFieldState": [Function],
                        "resumeValidation": [Function],
                        "setConfig": [Function],
                        "shift": [Function],
                        "submit": [Function],
                        "subscribe": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                        "update": [Function],
                        "valid": true,
                      }
                    }
                    inputAddon={
                      Object {
                        "before": Object {
                          "fields": Array [
                            Object {
                              "component": "input-addon-button-group",
                              "fields": Array [
                                Object {
                                  "component": "button",
                                  "label": "Set 1",
                                  "name": "set1",
                                  "onClick": [Function],
                                },
                                Object {
                                  "component": "button",
                                  "label": "Set 2",
                                  "name": "set2",
                                },
                              ],
                              "name": "i-a-g-2",
                            },
                          ],
                        },
                      }
                    }
                    label="Text Box With Input Addon"
                    name="text_box_21"
                    render={[Function]}
                    title="Text Box With Input Addon"
                    validate={[Function]}
                  >
                    <Field
                      FieldArrayProvider={[Function]}
                      FieldProvider={[Function]}
                      formOptions={
                        Object {
                          "batch": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "clearOnUnmount": false,
                          "clearedValue": undefined,
                          "concat": [Function],
                          "destroyOnUnregister": false,
                          "focus": [Function],
                          "getFieldState": [Function],
                          "getRegisteredFields": [Function],
                          "getState": [Function],
                          "handleSubmit": [Function],
                          "initialize": [Function],
                          "insert": [Function],
                          "isValidationPaused": [Function],
                          "move": [Function],
                          "onCancel": [Function],
                          "onSubmit": [MockFunction],
                          "pauseValidation": [Function],
                          "pop": [Function],
                          "pristine": true,
                          "push": [Function],
                          "registerField": [Function],
                          "remove": [Function],
                          "removeBatch": [Function],
                          "renderForm": [Function],
                          "reset": [Function],
                          "resetFieldState": [Function],
                          "resumeValidation": [Function],
                          "setConfig": [Function],
                          "shift": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                          "update": [Function],
                          "valid": true,
                        }
                      }
                      format={[Function]}
                      inputAddon={
                        Object {
                          "before": Object {
                            "fields": Array [
                              Object {
                                "component": "input-addon-button-group",
                                "fields": Array [
                                  Object {
                                    "component": "button",
                                    "label": "Set 1",
                                    "name": "set1",
                                    "onClick": [Function],
                                  },
                                  Object {
                                    "component": "button",
                                    "label": "Set 2",
                                    "name": "set2",
                                  },
                                ],
                                "name": "i-a-g-2",
                              },
                            ],
                          },
                        }
                      }
                      label="Text Box With Input Addon"
                      name="text_box_21"
                      parse={[Function]}
                      reactFinalForm={
                        Object {
                          "batch": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "destroyOnUnregister": false,
                          "focus": [Function],
                          "getFieldState": [Function],
                          "getRegisteredFields": [Function],
                          "getState": [Function],
                          "initialize": [Function],
                          "isValidationPaused": [Function],
                          "mutators": Object {
                            "concat": [Function],
                            "insert": [Function],
                            "move": [Function],
                            "pop": [Function],
                            "push": [Function],
                            "remove": [Function],
                            "removeBatch": [Function],
                            "shift": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                            "update": [Function],
                          },
                          "pauseValidation": [Function],
                          "registerField": [Function],
                          "reset": [Function],
                          "resetFieldState": [Function],
                          "resumeValidation": [Function],
                          "setConfig": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                        }
                      }
                      render={[Function]}
                      title="Text Box With Input Addon"
                      validate={[Function]}
                    >
                      <TextField
                        FieldArrayProvider={[Function]}
                        FieldProvider={[Function]}
                        formOptions={
                          Object {
                            "batch": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearOnUnmount": false,
                            "clearedValue": undefined,
                            "concat": [Function],
                            "destroyOnUnregister": false,
                            "focus": [Function],
                            "getFieldState": [Function],
                            "getRegisteredFields": [Function],
                            "getState": [Function],
                            "handleSubmit": [Function],
                            "initialize": [Function],
                            "insert": [Function],
                            "isValidationPaused": [Function],
                            "move": [Function],
                            "onCancel": [Function],
                            "onSubmit": [MockFunction],
                            "pauseValidation": [Function],
                            "pop": [Function],
                            "pristine": true,
                            "push": [Function],
                            "registerField": [Function],
                            "remove": [Function],
                            "removeBatch": [Function],
                            "renderForm": [Function],
                            "reset": [Function],
                            "resetFieldState": [Function],
                            "resumeValidation": [Function],
                            "setConfig": [Function],
                            "shift": [Function],
                            "submit": [Function],
                            "subscribe": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                            "update": [Function],
                            "valid": true,
                          }
                        }
                        input={
                          Object {
                            "name": "text_box_21",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "",
                          }
                        }
                        inputAddon={
                          Object {
                            "before": Object {
                              "fields": Array [
                                Object {
                                  "component": "input-addon-button-group",
                                  "fields": Array [
                                    Object {
                                      "component": "button",
                                      "label": "Set 1",
                                      "name": "set1",
                                      "onClick": [Function],
                                    },
                                    Object {
                                      "component": "button",
                                      "label": "Set 2",
                                      "name": "set2",
                                    },
                                  ],
                                  "name": "i-a-g-2",
                                },
                              ],
                            },
                          }
                        }
                        label="Text Box With Input Addon"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "modified": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        title="Text Box With Input Addon"
                      >
                        <FieldInterface
                          FieldArrayProvider={[Function]}
                          FieldProvider={[Function]}
                          componentType="text-field"
                          formOptions={
                            Object {
                              "batch": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearOnUnmount": false,
                              "clearedValue": undefined,
                              "concat": [Function],
                              "destroyOnUnregister": false,
                              "focus": [Function],
                              "getFieldState": [Function],
                              "getRegisteredFields": [Function],
                              "getState": [Function],
                              "handleSubmit": [Function],
                              "initialize": [Function],
                              "insert": [Function],
                              "isValidationPaused": [Function],
                              "move": [Function],
                              "onCancel": [Function],
                              "onSubmit": [MockFunction],
                              "pauseValidation": [Function],
                              "pop": [Function],
                              "pristine": true,
                              "push": [Function],
                              "registerField": [Function],
                              "remove": [Function],
                              "removeBatch": [Function],
                              "renderForm": [Function],
                              "reset": [Function],
                              "resetFieldState": [Function],
                              "resumeValidation": [Function],
                              "setConfig": [Function],
                              "shift": [Function],
                              "submit": [Function],
                              "subscribe": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                              "update": [Function],
                              "valid": true,
                            }
                          }
                          input={
                            Object {
                              "name": "text_box_21",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          inputAddon={
                            Object {
                              "before": Object {
                                "fields": Array [
                                  Object {
                                    "component": "input-addon-button-group",
                                    "fields": Array [
                                      Object {
                                        "component": "button",
                                        "label": "Set 1",
                                        "name": "set1",
                                        "onClick": [Function],
                                      },
                                      Object {
                                        "component": "button",
                                        "label": "Set 2",
                                        "name": "set2",
                                      },
                                    ],
                                    "name": "i-a-g-2",
                                  },
                                ],
                              },
                            }
                          }
                          label="Text Box With Input Addon"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "modified": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          name="text_box_21"
                          title="Text Box With Input Addon"
                        >
                          <FormGroup
                            bsClass="form-group"
                            validationState={null}
                          >
                            <div
                              className="form-group"
                            >
                              <ControlLabel
                                bsClass="control-label"
                                srOnly={false}
                              >
                                <label
                                  className="control-label"
                                >
                                  Text Box With Input Addon
                                </label>
                              </ControlLabel>
                              <InputGroup
                                bsClass="input-group"
                              >
                                <span
                                  className="input-group"
                                >
                                  <FormConditionWrapper>
                                    <FormFieldHideWrapper
                                      hideField={false}
                                    >
                                      <FieldWrapper
                                        component={[Function]}
                                        componentType="input-addon-button-group"
                                        fields={
                                          Array [
                                            Object {
                                              "component": "button",
                                              "label": "Set 1",
                                              "name": "set1",
                                              "onClick": [Function],
                                            },
                                            Object {
                                              "component": "button",
                                              "label": "Set 2",
                                              "name": "set2",
                                            },
                                          ]
                                        }
                                        formOptions={
                                          Object {
                                            "batch": [Function],
                                            "blur": [Function],
                                            "change": [Function],
                                            "clearOnUnmount": false,
                                            "clearedValue": undefined,
                                            "concat": [Function],
                                            "destroyOnUnregister": false,
                                            "focus": [Function],
                                            "getFieldState": [Function],
                                            "getRegisteredFields": [Function],
                                            "getState": [Function],
                                            "handleSubmit": [Function],
                                            "initialize": [Function],
                                            "insert": [Function],
                                            "isValidationPaused": [Function],
                                            "move": [Function],
                                            "onCancel": [Function],
                                            "onSubmit": [MockFunction],
                                            "pauseValidation": [Function],
                                            "pop": [Function],
                                            "pristine": true,
                                            "push": [Function],
                                            "registerField": [Function],
                                            "remove": [Function],
                                            "removeBatch": [Function],
                                            "renderForm": [Function],
                                            "reset": [Function],
                                            "resetFieldState": [Function],
                                            "resumeValidation": [Function],
                                            "setConfig": [Function],
                                            "shift": [Function],
                                            "submit": [Function],
                                            "subscribe": [Function],
                                            "swap": [Function],
                                            "unshift": [Function],
                                            "update": [Function],
                                            "valid": true,
                                          }
                                        }
                                        name="i-a-g-2"
                                        validate={
                                          Array [
                                            undefined,
                                          ]
                                        }
                                      >
                                        <InputAddonButtonGroup
                                          FieldProvider={[Function]}
                                          FormSpyProvider={[Function]}
                                          fields={
                                            Array [
                                              Object {
                                                "component": "button",
                                                "label": "Set 1",
                                                "name": "set1",
                                                "onClick": [Function],
                                              },
                                              Object {
                                                "component": "button",
                                                "label": "Set 2",
                                                "name": "set2",
                                              },
                                            ]
                                          }
                                          formOptions={
                                            Object {
                                              "batch": [Function],
                                              "blur": [Function],
                                              "change": [Function],
                                              "clearOnUnmount": false,
                                              "clearedValue": undefined,
                                              "concat": [Function],
                                              "destroyOnUnregister": false,
                                              "focus": [Function],
                                              "getFieldState": [Function],
                                              "getRegisteredFields": [Function],
                                              "getState": [Function],
                                              "handleSubmit": [Function],
                                              "initialize": [Function],
                                              "insert": [Function],
                                              "isValidationPaused": [Function],
                                              "move": [Function],
                                              "onCancel": [Function],
                                              "onSubmit": [MockFunction],
                                              "pauseValidation": [Function],
                                              "pop": [Function],
                                              "pristine": true,
                                              "push": [Function],
                                              "registerField": [Function],
                                              "remove": [Function],
                                              "removeBatch": [Function],
                                              "renderForm": [Function],
                                              "reset": [Function],
                                              "resetFieldState": [Function],
                                              "resumeValidation": [Function],
                                              "setConfig": [Function],
                                              "shift": [Function],
                                              "submit": [Function],
                                              "subscribe": [Function],
                                              "swap": [Function],
                                              "unshift": [Function],
                                              "update": [Function],
                                              "valid": true,
                                            }
                                          }
                                          name="i-a-g-2"
                                          validate={[Function]}
                                        >
                                          <InputGroupButton
                                            bsClass="input-group-btn"
                                          >
                                            <span
                                              className="input-group-btn"
                                            >
                                              <FormConditionWrapper>
                                                <FormFieldHideWrapper
                                                  hideField={false}
                                                >
                                                  <FieldWrapper
                                                    component={[Function]}
                                                    componentType="button"
                                                    formOptions={
                                                      Object {
                                                        "batch": [Function],
                                                        "blur": [Function],
                                                        "change": [Function],
                                                        "clearOnUnmount": false,
                                                        "clearedValue": undefined,
                                                        "concat": [Function],
                                                        "destroyOnUnregister": false,
                                                        "focus": [Function],
                                                        "getFieldState": [Function],
                                                        "getRegisteredFields": [Function],
                                                        "getState": [Function],
                                                        "handleSubmit": [Function],
                                                        "initialize": [Function],
                                                        "insert": [Function],
                                                        "isValidationPaused": [Function],
                                                        "move": [Function],
                                                        "onCancel": [Function],
                                                        "onSubmit": [MockFunction],
                                                        "pauseValidation": [Function],
                                                        "pop": [Function],
                                                        "pristine": true,
                                                        "push": [Function],
                                                        "registerField": [Function],
                                                        "remove": [Function],
                                                        "removeBatch": [Function],
                                                        "renderForm": [Function],
                                                        "reset": [Function],
                                                        "resetFieldState": [Function],
                                                        "resumeValidation": [Function],
                                                        "setConfig": [Function],
                                                        "shift": [Function],
                                                        "submit": [Function],
                                                        "subscribe": [Function],
                                                        "swap": [Function],
                                                        "unshift": [Function],
                                                        "update": [Function],
                                                        "valid": true,
                                                      }
                                                    }
                                                    label="Set 1"
                                                    name="set1"
                                                    onClick={[Function]}
                                                    validate={
                                                      Array [
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <Button
                                                      FieldProvider={[Function]}
                                                      FormSpyProvider={[Function]}
                                                      className=""
                                                      formOptions={
                                                        Object {
                                                          "batch": [Function],
                                                          "blur": [Function],
                                                          "change": [Function],
                                                          "clearOnUnmount": false,
                                                          "clearedValue": undefined,
                                                          "concat": [Function],
                                                          "destroyOnUnregister": false,
                                                          "focus": [Function],
                                                          "getFieldState": [Function],
                                                          "getRegisteredFields": [Function],
                                                          "getState": [Function],
                                                          "handleSubmit": [Function],
                                                          "initialize": [Function],
                                                          "insert": [Function],
                                                          "isValidationPaused": [Function],
                                                          "move": [Function],
                                                          "onCancel": [Function],
                                                          "onSubmit": [MockFunction],
                                                          "pauseValidation": [Function],
                                                          "pop": [Function],
                                                          "pristine": true,
                                                          "push": [Function],
                                                          "registerField": [Function],
                                                          "remove": [Function],
                                                          "removeBatch": [Function],
                                                          "renderForm": [Function],
                                                          "reset": [Function],
                                                          "resetFieldState": [Function],
                                                          "resumeValidation": [Function],
                                                          "setConfig": [Function],
                                                          "shift": [Function],
                                                          "submit": [Function],
                                                          "subscribe": [Function],
                                                          "swap": [Function],
                                                          "unshift": [Function],
                                                          "update": [Function],
                                                          "valid": true,
                                                        }
                                                      }
                                                      label="Set 1"
                                                      name="set1"
                                                      onClick={[Function]}
                                                      validate={[Function]}
                                                    >
                                                      <Button
                                                        FormSpyProvider={[Function]}
                                                        active={false}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsStyle="default"
                                                        className=""
                                                        disabled={false}
                                                        name="set1"
                                                        onClick={[Function]}
                                                      >
                                                        <button
                                                          FormSpyProvider={[Function]}
                                                          className="btn btn-default"
                                                          disabled={false}
                                                          name="set1"
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          Set 1
                                                        </button>
                                                      </Button>
                                                    </Button>
                                                  </FieldWrapper>
                                                </FormFieldHideWrapper>
                                              </FormConditionWrapper>
                                              <FormConditionWrapper>
                                                <FormFieldHideWrapper
                                                  hideField={false}
                                                >
                                                  <FieldWrapper
                                                    component={[Function]}
                                                    componentType="button"
                                                    formOptions={
                                                      Object {
                                                        "batch": [Function],
                                                        "blur": [Function],
                                                        "change": [Function],
                                                        "clearOnUnmount": false,
                                                        "clearedValue": undefined,
                                                        "concat": [Function],
                                                        "destroyOnUnregister": false,
                                                        "focus": [Function],
                                                        "getFieldState": [Function],
                                                        "getRegisteredFields": [Function],
                                                        "getState": [Function],
                                                        "handleSubmit": [Function],
                                                        "initialize": [Function],
                                                        "insert": [Function],
                                                        "isValidationPaused": [Function],
                                                        "move": [Function],
                                                        "onCancel": [Function],
                                                        "onSubmit": [MockFunction],
                                                        "pauseValidation": [Function],
                                                        "pop": [Function],
                                                        "pristine": true,
                                                        "push": [Function],
                                                        "registerField": [Function],
                                                        "remove": [Function],
                                                        "removeBatch": [Function],
                                                        "renderForm": [Function],
                                                        "reset": [Function],
                                                        "resetFieldState": [Function],
                                                        "resumeValidation": [Function],
                                                        "setConfig": [Function],
                                                        "shift": [Function],
                                                        "submit": [Function],
                                                        "subscribe": [Function],
                                                        "swap": [Function],
                                                        "unshift": [Function],
                                                        "update": [Function],
                                                        "valid": true,
                                                      }
                                                    }
                                                    label="Set 2"
                                                    name="set2"
                                                    validate={
                                                      Array [
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <Button
                                                      FieldProvider={[Function]}
                                                      FormSpyProvider={[Function]}
                                                      className=""
                                                      formOptions={
                                                        Object {
                                                          "batch": [Function],
                                                          "blur": [Function],
                                                          "change": [Function],
                                                          "clearOnUnmount": false,
                                                          "clearedValue": undefined,
                                                          "concat": [Function],
                                                          "destroyOnUnregister": false,
                                                          "focus": [Function],
                                                          "getFieldState": [Function],
                                                          "getRegisteredFields": [Function],
                                                          "getState": [Function],
                                                          "handleSubmit": [Function],
                                                          "initialize": [Function],
                                                          "insert": [Function],
                                                          "isValidationPaused": [Function],
                                                          "move": [Function],
                                                          "onCancel": [Function],
                                                          "onSubmit": [MockFunction],
                                                          "pauseValidation": [Function],
                                                          "pop": [Function],
                                                          "pristine": true,
                                                          "push": [Function],
                                                          "registerField": [Function],
                                                          "remove": [Function],
                                                          "removeBatch": [Function],
                                                          "renderForm": [Function],
                                                          "reset": [Function],
                                                          "resetFieldState": [Function],
                                                          "resumeValidation": [Function],
                                                          "setConfig": [Function],
                                                          "shift": [Function],
                                                          "submit": [Function],
                                                          "subscribe": [Function],
                                                          "swap": [Function],
                                                          "unshift": [Function],
                                                          "update": [Function],
                                                          "valid": true,
                                                        }
                                                      }
                                                      label="Set 2"
                                                      name="set2"
                                                      validate={[Function]}
                                                    >
                                                      <Button
                                                        FormSpyProvider={[Function]}
                                                        active={false}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsStyle="default"
                                                        className=""
                                                        disabled={false}
                                                        name="set2"
                                                      >
                                                        <button
                                                          FormSpyProvider={[Function]}
                                                          className="btn btn-default"
                                                          disabled={false}
                                                          name="set2"
                                                          type="button"
                                                        >
                                                          Set 2
                                                        </button>
                                                      </Button>
                                                    </Button>
                                                  </FieldWrapper>
                                                </FormFieldHideWrapper>
                                              </FormConditionWrapper>
                                            </span>
                                          </InputGroupButton>
                                        </InputAddonButtonGroup>
                                      </FieldWrapper>
                                    </FormFieldHideWrapper>
                                  </FormConditionWrapper>
                                  <FormControl
                                    bsClass="form-control"
                                    componentClass="input"
                                    id="text_box_21"
                                    name="text_box_21"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    title="Text Box With Input Addon"
                                    value=""
                                  >
                                    <input
                                      className="form-control"
                                      id="text_box_21"
                                      name="text_box_21"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      title="Text Box With Input Addon"
                                      value=""
                                    />
                                  </FormControl>
                                </span>
                              </InputGroup>
                            </div>
                          </FormGroup>
                        </FieldInterface>
                      </TextField>
                    </Field>
                  </ReactFinalForm(Field)>
                </FieldProvider>
              </FieldWrapper>
            </FormFieldHideWrapper>
          </FormConditionWrapper>
        </form>
      </Form>
    </FormWapper>
  </ReactFinalForm>
</FormRenderer>
`;

exports[`<Input Addon> should render group mixed before input addon correctly 1`] = `
<FormRenderer
  buttonClassName=""
  buttonsLabels={Object {}}
  clearOnUnmount={false}
  disableSubmit={Array []}
  formFieldsMapper={
    Object {
      "button": [Function],
      "checkbox": [Function],
      "date-picker": [Function],
      "input-addon-button-group": [Function],
      "input-addon-group": [Function],
      "plain-text": [Function],
      "radio": [Function],
      "select-field": [Function],
      "sub-form": [Function],
      "switch-field": [Function],
      "tabs": [Function],
      "text-field": [Function],
      "textarea-field": [Function],
      "time-picker": [Function],
      "wizard": [Function],
    }
  }
  initialValues={Object {}}
  layoutMapper={
    Object {
      "Button": [Function],
      "ButtonGroup": [Function],
      "Description": [Function],
      "FormWrapper": [Function],
      "Title": [Function],
    }
  }
  onCancel={[Function]}
  onSubmit={[MockFunction]}
  schema={
    Object {
      "fields": Array [
        Object {
          "component": "text-field",
          "inputAddon": Object {
            "before": Object {
              "fields": Array [
                Object {
                  "component": "input-addon-group",
                  "fields": Array [
                    Object {
                      "component": "plain-text",
                      "label": "-",
                      "name": "name1",
                      "variant": "span",
                    },
                  ],
                  "name": "i-a-g-2",
                },
                Object {
                  "component": "input-addon-button-group",
                  "fields": Array [
                    Object {
                      "component": "button",
                      "label": "Set 3",
                      "name": "set3",
                    },
                  ],
                  "name": "i-a-g-3",
                },
              ],
            },
          },
          "label": "Text Box With Input Addon",
          "name": "text_box_21",
          "title": "Text Box With Input Addon",
        },
      ],
    }
  }
  showFormControls={false}
>
  <ReactFinalForm
    decorators={
      Array [
        [Function],
      ]
    }
    initialValues={Object {}}
    mutators={
      Object {
        "concat": [Function],
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "removeBatch": [Function],
        "shift": [Function],
        "swap": [Function],
        "unshift": [Function],
        "update": [Function],
      }
    }
    onSubmit={[MockFunction]}
    render={[Function]}
    subscription={
      Object {
        "pristine": true,
        "submitting": true,
        "valid": true,
      }
    }
  >
    <FormWapper
      onSubmit={[Function]}
    >
      <Form
        bsClass="form"
        componentClass="form"
        horizontal={false}
        inline={false}
        onSubmit={[Function]}
      >
        <form
          className=""
          onSubmit={[Function]}
        >
          <FormConditionWrapper>
            <FormFieldHideWrapper
              hideField={false}
            >
              <FieldWrapper
                component={[Function]}
                componentType="text-field"
                formOptions={
                  Object {
                    "batch": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearOnUnmount": false,
                    "clearedValue": undefined,
                    "concat": [Function],
                    "destroyOnUnregister": false,
                    "focus": [Function],
                    "getFieldState": [Function],
                    "getRegisteredFields": [Function],
                    "getState": [Function],
                    "handleSubmit": [Function],
                    "initialize": [Function],
                    "insert": [Function],
                    "isValidationPaused": [Function],
                    "move": [Function],
                    "onCancel": [Function],
                    "onSubmit": [MockFunction],
                    "pauseValidation": [Function],
                    "pop": [Function],
                    "pristine": true,
                    "push": [Function],
                    "registerField": [Function],
                    "remove": [Function],
                    "removeBatch": [Function],
                    "renderForm": [Function],
                    "reset": [Function],
                    "resetFieldState": [Function],
                    "resumeValidation": [Function],
                    "setConfig": [Function],
                    "shift": [Function],
                    "submit": [Function],
                    "subscribe": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                    "update": [Function],
                    "valid": true,
                  }
                }
                inputAddon={
                  Object {
                    "before": Object {
                      "fields": Array [
                        Object {
                          "component": "input-addon-group",
                          "fields": Array [
                            Object {
                              "component": "plain-text",
                              "label": "-",
                              "name": "name1",
                              "variant": "span",
                            },
                          ],
                          "name": "i-a-g-2",
                        },
                        Object {
                          "component": "input-addon-button-group",
                          "fields": Array [
                            Object {
                              "component": "button",
                              "label": "Set 3",
                              "name": "set3",
                            },
                          ],
                          "name": "i-a-g-3",
                        },
                      ],
                    },
                  }
                }
                label="Text Box With Input Addon"
                name="text_box_21"
                title="Text Box With Input Addon"
                validate={
                  Array [
                    undefined,
                  ]
                }
              >
                <FieldProvider
                  FieldArrayProvider={[Function]}
                  FieldProvider={[Function]}
                  component={[Function]}
                  formOptions={
                    Object {
                      "batch": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearOnUnmount": false,
                      "clearedValue": undefined,
                      "concat": [Function],
                      "destroyOnUnregister": false,
                      "focus": [Function],
                      "getFieldState": [Function],
                      "getRegisteredFields": [Function],
                      "getState": [Function],
                      "handleSubmit": [Function],
                      "initialize": [Function],
                      "insert": [Function],
                      "isValidationPaused": [Function],
                      "move": [Function],
                      "onCancel": [Function],
                      "onSubmit": [MockFunction],
                      "pauseValidation": [Function],
                      "pop": [Function],
                      "pristine": true,
                      "push": [Function],
                      "registerField": [Function],
                      "remove": [Function],
                      "removeBatch": [Function],
                      "renderForm": [Function],
                      "reset": [Function],
                      "resetFieldState": [Function],
                      "resumeValidation": [Function],
                      "setConfig": [Function],
                      "shift": [Function],
                      "submit": [Function],
                      "subscribe": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                      "update": [Function],
                      "valid": true,
                    }
                  }
                  inputAddon={
                    Object {
                      "before": Object {
                        "fields": Array [
                          Object {
                            "component": "input-addon-group",
                            "fields": Array [
                              Object {
                                "component": "plain-text",
                                "label": "-",
                                "name": "name1",
                                "variant": "span",
                              },
                            ],
                            "name": "i-a-g-2",
                          },
                          Object {
                            "component": "input-addon-button-group",
                            "fields": Array [
                              Object {
                                "component": "button",
                                "label": "Set 3",
                                "name": "set3",
                              },
                            ],
                            "name": "i-a-g-3",
                          },
                        ],
                      },
                    }
                  }
                  label="Text Box With Input Addon"
                  name="text_box_21"
                  title="Text Box With Input Addon"
                  validate={[Function]}
                >
                  <ReactFinalForm(Field)
                    FieldArrayProvider={[Function]}
                    FieldProvider={[Function]}
                    formOptions={
                      Object {
                        "batch": [Function],
                        "blur": [Function],
                        "change": [Function],
                        "clearOnUnmount": false,
                        "clearedValue": undefined,
                        "concat": [Function],
                        "destroyOnUnregister": false,
                        "focus": [Function],
                        "getFieldState": [Function],
                        "getRegisteredFields": [Function],
                        "getState": [Function],
                        "handleSubmit": [Function],
                        "initialize": [Function],
                        "insert": [Function],
                        "isValidationPaused": [Function],
                        "move": [Function],
                        "onCancel": [Function],
                        "onSubmit": [MockFunction],
                        "pauseValidation": [Function],
                        "pop": [Function],
                        "pristine": true,
                        "push": [Function],
                        "registerField": [Function],
                        "remove": [Function],
                        "removeBatch": [Function],
                        "renderForm": [Function],
                        "reset": [Function],
                        "resetFieldState": [Function],
                        "resumeValidation": [Function],
                        "setConfig": [Function],
                        "shift": [Function],
                        "submit": [Function],
                        "subscribe": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                        "update": [Function],
                        "valid": true,
                      }
                    }
                    inputAddon={
                      Object {
                        "before": Object {
                          "fields": Array [
                            Object {
                              "component": "input-addon-group",
                              "fields": Array [
                                Object {
                                  "component": "plain-text",
                                  "label": "-",
                                  "name": "name1",
                                  "variant": "span",
                                },
                              ],
                              "name": "i-a-g-2",
                            },
                            Object {
                              "component": "input-addon-button-group",
                              "fields": Array [
                                Object {
                                  "component": "button",
                                  "label": "Set 3",
                                  "name": "set3",
                                },
                              ],
                              "name": "i-a-g-3",
                            },
                          ],
                        },
                      }
                    }
                    label="Text Box With Input Addon"
                    name="text_box_21"
                    render={[Function]}
                    title="Text Box With Input Addon"
                    validate={[Function]}
                  >
                    <Field
                      FieldArrayProvider={[Function]}
                      FieldProvider={[Function]}
                      formOptions={
                        Object {
                          "batch": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "clearOnUnmount": false,
                          "clearedValue": undefined,
                          "concat": [Function],
                          "destroyOnUnregister": false,
                          "focus": [Function],
                          "getFieldState": [Function],
                          "getRegisteredFields": [Function],
                          "getState": [Function],
                          "handleSubmit": [Function],
                          "initialize": [Function],
                          "insert": [Function],
                          "isValidationPaused": [Function],
                          "move": [Function],
                          "onCancel": [Function],
                          "onSubmit": [MockFunction],
                          "pauseValidation": [Function],
                          "pop": [Function],
                          "pristine": true,
                          "push": [Function],
                          "registerField": [Function],
                          "remove": [Function],
                          "removeBatch": [Function],
                          "renderForm": [Function],
                          "reset": [Function],
                          "resetFieldState": [Function],
                          "resumeValidation": [Function],
                          "setConfig": [Function],
                          "shift": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                          "update": [Function],
                          "valid": true,
                        }
                      }
                      format={[Function]}
                      inputAddon={
                        Object {
                          "before": Object {
                            "fields": Array [
                              Object {
                                "component": "input-addon-group",
                                "fields": Array [
                                  Object {
                                    "component": "plain-text",
                                    "label": "-",
                                    "name": "name1",
                                    "variant": "span",
                                  },
                                ],
                                "name": "i-a-g-2",
                              },
                              Object {
                                "component": "input-addon-button-group",
                                "fields": Array [
                                  Object {
                                    "component": "button",
                                    "label": "Set 3",
                                    "name": "set3",
                                  },
                                ],
                                "name": "i-a-g-3",
                              },
                            ],
                          },
                        }
                      }
                      label="Text Box With Input Addon"
                      name="text_box_21"
                      parse={[Function]}
                      reactFinalForm={
                        Object {
                          "batch": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "destroyOnUnregister": false,
                          "focus": [Function],
                          "getFieldState": [Function],
                          "getRegisteredFields": [Function],
                          "getState": [Function],
                          "initialize": [Function],
                          "isValidationPaused": [Function],
                          "mutators": Object {
                            "concat": [Function],
                            "insert": [Function],
                            "move": [Function],
                            "pop": [Function],
                            "push": [Function],
                            "remove": [Function],
                            "removeBatch": [Function],
                            "shift": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                            "update": [Function],
                          },
                          "pauseValidation": [Function],
                          "registerField": [Function],
                          "reset": [Function],
                          "resetFieldState": [Function],
                          "resumeValidation": [Function],
                          "setConfig": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                        }
                      }
                      render={[Function]}
                      title="Text Box With Input Addon"
                      validate={[Function]}
                    >
                      <TextField
                        FieldArrayProvider={[Function]}
                        FieldProvider={[Function]}
                        formOptions={
                          Object {
                            "batch": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearOnUnmount": false,
                            "clearedValue": undefined,
                            "concat": [Function],
                            "destroyOnUnregister": false,
                            "focus": [Function],
                            "getFieldState": [Function],
                            "getRegisteredFields": [Function],
                            "getState": [Function],
                            "handleSubmit": [Function],
                            "initialize": [Function],
                            "insert": [Function],
                            "isValidationPaused": [Function],
                            "move": [Function],
                            "onCancel": [Function],
                            "onSubmit": [MockFunction],
                            "pauseValidation": [Function],
                            "pop": [Function],
                            "pristine": true,
                            "push": [Function],
                            "registerField": [Function],
                            "remove": [Function],
                            "removeBatch": [Function],
                            "renderForm": [Function],
                            "reset": [Function],
                            "resetFieldState": [Function],
                            "resumeValidation": [Function],
                            "setConfig": [Function],
                            "shift": [Function],
                            "submit": [Function],
                            "subscribe": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                            "update": [Function],
                            "valid": true,
                          }
                        }
                        input={
                          Object {
                            "name": "text_box_21",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "",
                          }
                        }
                        inputAddon={
                          Object {
                            "before": Object {
                              "fields": Array [
                                Object {
                                  "component": "input-addon-group",
                                  "fields": Array [
                                    Object {
                                      "component": "plain-text",
                                      "label": "-",
                                      "name": "name1",
                                      "variant": "span",
                                    },
                                  ],
                                  "name": "i-a-g-2",
                                },
                                Object {
                                  "component": "input-addon-button-group",
                                  "fields": Array [
                                    Object {
                                      "component": "button",
                                      "label": "Set 3",
                                      "name": "set3",
                                    },
                                  ],
                                  "name": "i-a-g-3",
                                },
                              ],
                            },
                          }
                        }
                        label="Text Box With Input Addon"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "modified": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        title="Text Box With Input Addon"
                      >
                        <FieldInterface
                          FieldArrayProvider={[Function]}
                          FieldProvider={[Function]}
                          componentType="text-field"
                          formOptions={
                            Object {
                              "batch": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearOnUnmount": false,
                              "clearedValue": undefined,
                              "concat": [Function],
                              "destroyOnUnregister": false,
                              "focus": [Function],
                              "getFieldState": [Function],
                              "getRegisteredFields": [Function],
                              "getState": [Function],
                              "handleSubmit": [Function],
                              "initialize": [Function],
                              "insert": [Function],
                              "isValidationPaused": [Function],
                              "move": [Function],
                              "onCancel": [Function],
                              "onSubmit": [MockFunction],
                              "pauseValidation": [Function],
                              "pop": [Function],
                              "pristine": true,
                              "push": [Function],
                              "registerField": [Function],
                              "remove": [Function],
                              "removeBatch": [Function],
                              "renderForm": [Function],
                              "reset": [Function],
                              "resetFieldState": [Function],
                              "resumeValidation": [Function],
                              "setConfig": [Function],
                              "shift": [Function],
                              "submit": [Function],
                              "subscribe": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                              "update": [Function],
                              "valid": true,
                            }
                          }
                          input={
                            Object {
                              "name": "text_box_21",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          inputAddon={
                            Object {
                              "before": Object {
                                "fields": Array [
                                  Object {
                                    "component": "input-addon-group",
                                    "fields": Array [
                                      Object {
                                        "component": "plain-text",
                                        "label": "-",
                                        "name": "name1",
                                        "variant": "span",
                                      },
                                    ],
                                    "name": "i-a-g-2",
                                  },
                                  Object {
                                    "component": "input-addon-button-group",
                                    "fields": Array [
                                      Object {
                                        "component": "button",
                                        "label": "Set 3",
                                        "name": "set3",
                                      },
                                    ],
                                    "name": "i-a-g-3",
                                  },
                                ],
                              },
                            }
                          }
                          label="Text Box With Input Addon"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "modified": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          name="text_box_21"
                          title="Text Box With Input Addon"
                        >
                          <FormGroup
                            bsClass="form-group"
                            validationState={null}
                          >
                            <div
                              className="form-group"
                            >
                              <ControlLabel
                                bsClass="control-label"
                                srOnly={false}
                              >
                                <label
                                  className="control-label"
                                >
                                  Text Box With Input Addon
                                </label>
                              </ControlLabel>
                              <InputGroup
                                bsClass="input-group"
                              >
                                <span
                                  className="input-group"
                                >
                                  <FormConditionWrapper>
                                    <FormFieldHideWrapper
                                      hideField={false}
                                    >
                                      <FieldWrapper
                                        component={[Function]}
                                        componentType="input-addon-group"
                                        fields={
                                          Array [
                                            Object {
                                              "component": "plain-text",
                                              "label": "-",
                                              "name": "name1",
                                              "variant": "span",
                                            },
                                          ]
                                        }
                                        formOptions={
                                          Object {
                                            "batch": [Function],
                                            "blur": [Function],
                                            "change": [Function],
                                            "clearOnUnmount": false,
                                            "clearedValue": undefined,
                                            "concat": [Function],
                                            "destroyOnUnregister": false,
                                            "focus": [Function],
                                            "getFieldState": [Function],
                                            "getRegisteredFields": [Function],
                                            "getState": [Function],
                                            "handleSubmit": [Function],
                                            "initialize": [Function],
                                            "insert": [Function],
                                            "isValidationPaused": [Function],
                                            "move": [Function],
                                            "onCancel": [Function],
                                            "onSubmit": [MockFunction],
                                            "pauseValidation": [Function],
                                            "pop": [Function],
                                            "pristine": true,
                                            "push": [Function],
                                            "registerField": [Function],
                                            "remove": [Function],
                                            "removeBatch": [Function],
                                            "renderForm": [Function],
                                            "reset": [Function],
                                            "resetFieldState": [Function],
                                            "resumeValidation": [Function],
                                            "setConfig": [Function],
                                            "shift": [Function],
                                            "submit": [Function],
                                            "subscribe": [Function],
                                            "swap": [Function],
                                            "unshift": [Function],
                                            "update": [Function],
                                            "valid": true,
                                          }
                                        }
                                        name="i-a-g-2"
                                        validate={
                                          Array [
                                            undefined,
                                          ]
                                        }
                                      >
                                        <InputAddonGroup
                                          FieldProvider={[Function]}
                                          FormSpyProvider={[Function]}
                                          fields={
                                            Array [
                                              Object {
                                                "component": "plain-text",
                                                "label": "-",
                                                "name": "name1",
                                                "variant": "span",
                                              },
                                            ]
                                          }
                                          formOptions={
                                            Object {
                                              "batch": [Function],
                                              "blur": [Function],
                                              "change": [Function],
                                              "clearOnUnmount": false,
                                              "clearedValue": undefined,
                                              "concat": [Function],
                                              "destroyOnUnregister": false,
                                              "focus": [Function],
                                              "getFieldState": [Function],
                                              "getRegisteredFields": [Function],
                                              "getState": [Function],
                                              "handleSubmit": [Function],
                                              "initialize": [Function],
                                              "insert": [Function],
                                              "isValidationPaused": [Function],
                                              "move": [Function],
                                              "onCancel": [Function],
                                              "onSubmit": [MockFunction],
                                              "pauseValidation": [Function],
                                              "pop": [Function],
                                              "pristine": true,
                                              "push": [Function],
                                              "registerField": [Function],
                                              "remove": [Function],
                                              "removeBatch": [Function],
                                              "renderForm": [Function],
                                              "reset": [Function],
                                              "resetFieldState": [Function],
                                              "resumeValidation": [Function],
                                              "setConfig": [Function],
                                              "shift": [Function],
                                              "submit": [Function],
                                              "subscribe": [Function],
                                              "swap": [Function],
                                              "unshift": [Function],
                                              "update": [Function],
                                              "valid": true,
                                            }
                                          }
                                          name="i-a-g-2"
                                          validate={[Function]}
                                        >
                                          <InputGroupAddon
                                            bsClass="input-group-addon"
                                          >
                                            <span
                                              className="input-group-addon"
                                            >
                                              <FormConditionWrapper>
                                                <FormFieldHideWrapper
                                                  hideField={false}
                                                >
                                                  <FieldWrapper
                                                    component={[Function]}
                                                    componentType="plain-text"
                                                    formOptions={
                                                      Object {
                                                        "batch": [Function],
                                                        "blur": [Function],
                                                        "change": [Function],
                                                        "clearOnUnmount": false,
                                                        "clearedValue": undefined,
                                                        "concat": [Function],
                                                        "destroyOnUnregister": false,
                                                        "focus": [Function],
                                                        "getFieldState": [Function],
                                                        "getRegisteredFields": [Function],
                                                        "getState": [Function],
                                                        "handleSubmit": [Function],
                                                        "initialize": [Function],
                                                        "insert": [Function],
                                                        "isValidationPaused": [Function],
                                                        "move": [Function],
                                                        "onCancel": [Function],
                                                        "onSubmit": [MockFunction],
                                                        "pauseValidation": [Function],
                                                        "pop": [Function],
                                                        "pristine": true,
                                                        "push": [Function],
                                                        "registerField": [Function],
                                                        "remove": [Function],
                                                        "removeBatch": [Function],
                                                        "renderForm": [Function],
                                                        "reset": [Function],
                                                        "resetFieldState": [Function],
                                                        "resumeValidation": [Function],
                                                        "setConfig": [Function],
                                                        "shift": [Function],
                                                        "submit": [Function],
                                                        "subscribe": [Function],
                                                        "swap": [Function],
                                                        "unshift": [Function],
                                                        "update": [Function],
                                                        "valid": true,
                                                      }
                                                    }
                                                    label="-"
                                                    name="name1"
                                                    validate={
                                                      Array [
                                                        undefined,
                                                      ]
                                                    }
                                                    variant="span"
                                                  >
                                                    <PlainText
                                                      FieldProvider={[Function]}
                                                      FormSpyProvider={[Function]}
                                                      formOptions={
                                                        Object {
                                                          "batch": [Function],
                                                          "blur": [Function],
                                                          "change": [Function],
                                                          "clearOnUnmount": false,
                                                          "clearedValue": undefined,
                                                          "concat": [Function],
                                                          "destroyOnUnregister": false,
                                                          "focus": [Function],
                                                          "getFieldState": [Function],
                                                          "getRegisteredFields": [Function],
                                                          "getState": [Function],
                                                          "handleSubmit": [Function],
                                                          "initialize": [Function],
                                                          "insert": [Function],
                                                          "isValidationPaused": [Function],
                                                          "move": [Function],
                                                          "onCancel": [Function],
                                                          "onSubmit": [MockFunction],
                                                          "pauseValidation": [Function],
                                                          "pop": [Function],
                                                          "pristine": true,
                                                          "push": [Function],
                                                          "registerField": [Function],
                                                          "remove": [Function],
                                                          "removeBatch": [Function],
                                                          "renderForm": [Function],
                                                          "reset": [Function],
                                                          "resetFieldState": [Function],
                                                          "resumeValidation": [Function],
                                                          "setConfig": [Function],
                                                          "shift": [Function],
                                                          "submit": [Function],
                                                          "subscribe": [Function],
                                                          "swap": [Function],
                                                          "unshift": [Function],
                                                          "update": [Function],
                                                          "valid": true,
                                                        }
                                                      }
                                                      label="-"
                                                      name="name1"
                                                      validate={[Function]}
                                                      variant="span"
                                                    >
                                                      <span
                                                        key="name1-0"
                                                      >
                                                        -
                                                      </span>
                                                    </PlainText>
                                                  </FieldWrapper>
                                                </FormFieldHideWrapper>
                                              </FormConditionWrapper>
                                            </span>
                                          </InputGroupAddon>
                                        </InputAddonGroup>
                                      </FieldWrapper>
                                    </FormFieldHideWrapper>
                                  </FormConditionWrapper>
                                  <FormConditionWrapper>
                                    <FormFieldHideWrapper
                                      hideField={false}
                                    >
                                      <FieldWrapper
                                        component={[Function]}
                                        componentType="input-addon-button-group"
                                        fields={
                                          Array [
                                            Object {
                                              "component": "button",
                                              "label": "Set 3",
                                              "name": "set3",
                                            },
                                          ]
                                        }
                                        formOptions={
                                          Object {
                                            "batch": [Function],
                                            "blur": [Function],
                                            "change": [Function],
                                            "clearOnUnmount": false,
                                            "clearedValue": undefined,
                                            "concat": [Function],
                                            "destroyOnUnregister": false,
                                            "focus": [Function],
                                            "getFieldState": [Function],
                                            "getRegisteredFields": [Function],
                                            "getState": [Function],
                                            "handleSubmit": [Function],
                                            "initialize": [Function],
                                            "insert": [Function],
                                            "isValidationPaused": [Function],
                                            "move": [Function],
                                            "onCancel": [Function],
                                            "onSubmit": [MockFunction],
                                            "pauseValidation": [Function],
                                            "pop": [Function],
                                            "pristine": true,
                                            "push": [Function],
                                            "registerField": [Function],
                                            "remove": [Function],
                                            "removeBatch": [Function],
                                            "renderForm": [Function],
                                            "reset": [Function],
                                            "resetFieldState": [Function],
                                            "resumeValidation": [Function],
                                            "setConfig": [Function],
                                            "shift": [Function],
                                            "submit": [Function],
                                            "subscribe": [Function],
                                            "swap": [Function],
                                            "unshift": [Function],
                                            "update": [Function],
                                            "valid": true,
                                          }
                                        }
                                        name="i-a-g-3"
                                        validate={
                                          Array [
                                            undefined,
                                          ]
                                        }
                                      >
                                        <InputAddonButtonGroup
                                          FieldProvider={[Function]}
                                          FormSpyProvider={[Function]}
                                          fields={
                                            Array [
                                              Object {
                                                "component": "button",
                                                "label": "Set 3",
                                                "name": "set3",
                                              },
                                            ]
                                          }
                                          formOptions={
                                            Object {
                                              "batch": [Function],
                                              "blur": [Function],
                                              "change": [Function],
                                              "clearOnUnmount": false,
                                              "clearedValue": undefined,
                                              "concat": [Function],
                                              "destroyOnUnregister": false,
                                              "focus": [Function],
                                              "getFieldState": [Function],
                                              "getRegisteredFields": [Function],
                                              "getState": [Function],
                                              "handleSubmit": [Function],
                                              "initialize": [Function],
                                              "insert": [Function],
                                              "isValidationPaused": [Function],
                                              "move": [Function],
                                              "onCancel": [Function],
                                              "onSubmit": [MockFunction],
                                              "pauseValidation": [Function],
                                              "pop": [Function],
                                              "pristine": true,
                                              "push": [Function],
                                              "registerField": [Function],
                                              "remove": [Function],
                                              "removeBatch": [Function],
                                              "renderForm": [Function],
                                              "reset": [Function],
                                              "resetFieldState": [Function],
                                              "resumeValidation": [Function],
                                              "setConfig": [Function],
                                              "shift": [Function],
                                              "submit": [Function],
                                              "subscribe": [Function],
                                              "swap": [Function],
                                              "unshift": [Function],
                                              "update": [Function],
                                              "valid": true,
                                            }
                                          }
                                          name="i-a-g-3"
                                          validate={[Function]}
                                        >
                                          <InputGroupButton
                                            bsClass="input-group-btn"
                                          >
                                            <span
                                              className="input-group-btn"
                                            >
                                              <FormConditionWrapper>
                                                <FormFieldHideWrapper
                                                  hideField={false}
                                                >
                                                  <FieldWrapper
                                                    component={[Function]}
                                                    componentType="button"
                                                    formOptions={
                                                      Object {
                                                        "batch": [Function],
                                                        "blur": [Function],
                                                        "change": [Function],
                                                        "clearOnUnmount": false,
                                                        "clearedValue": undefined,
                                                        "concat": [Function],
                                                        "destroyOnUnregister": false,
                                                        "focus": [Function],
                                                        "getFieldState": [Function],
                                                        "getRegisteredFields": [Function],
                                                        "getState": [Function],
                                                        "handleSubmit": [Function],
                                                        "initialize": [Function],
                                                        "insert": [Function],
                                                        "isValidationPaused": [Function],
                                                        "move": [Function],
                                                        "onCancel": [Function],
                                                        "onSubmit": [MockFunction],
                                                        "pauseValidation": [Function],
                                                        "pop": [Function],
                                                        "pristine": true,
                                                        "push": [Function],
                                                        "registerField": [Function],
                                                        "remove": [Function],
                                                        "removeBatch": [Function],
                                                        "renderForm": [Function],
                                                        "reset": [Function],
                                                        "resetFieldState": [Function],
                                                        "resumeValidation": [Function],
                                                        "setConfig": [Function],
                                                        "shift": [Function],
                                                        "submit": [Function],
                                                        "subscribe": [Function],
                                                        "swap": [Function],
                                                        "unshift": [Function],
                                                        "update": [Function],
                                                        "valid": true,
                                                      }
                                                    }
                                                    label="Set 3"
                                                    name="set3"
                                                    validate={
                                                      Array [
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <Button
                                                      FieldProvider={[Function]}
                                                      FormSpyProvider={[Function]}
                                                      className=""
                                                      formOptions={
                                                        Object {
                                                          "batch": [Function],
                                                          "blur": [Function],
                                                          "change": [Function],
                                                          "clearOnUnmount": false,
                                                          "clearedValue": undefined,
                                                          "concat": [Function],
                                                          "destroyOnUnregister": false,
                                                          "focus": [Function],
                                                          "getFieldState": [Function],
                                                          "getRegisteredFields": [Function],
                                                          "getState": [Function],
                                                          "handleSubmit": [Function],
                                                          "initialize": [Function],
                                                          "insert": [Function],
                                                          "isValidationPaused": [Function],
                                                          "move": [Function],
                                                          "onCancel": [Function],
                                                          "onSubmit": [MockFunction],
                                                          "pauseValidation": [Function],
                                                          "pop": [Function],
                                                          "pristine": true,
                                                          "push": [Function],
                                                          "registerField": [Function],
                                                          "remove": [Function],
                                                          "removeBatch": [Function],
                                                          "renderForm": [Function],
                                                          "reset": [Function],
                                                          "resetFieldState": [Function],
                                                          "resumeValidation": [Function],
                                                          "setConfig": [Function],
                                                          "shift": [Function],
                                                          "submit": [Function],
                                                          "subscribe": [Function],
                                                          "swap": [Function],
                                                          "unshift": [Function],
                                                          "update": [Function],
                                                          "valid": true,
                                                        }
                                                      }
                                                      label="Set 3"
                                                      name="set3"
                                                      validate={[Function]}
                                                    >
                                                      <Button
                                                        FormSpyProvider={[Function]}
                                                        active={false}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsStyle="default"
                                                        className=""
                                                        disabled={false}
                                                        name="set3"
                                                      >
                                                        <button
                                                          FormSpyProvider={[Function]}
                                                          className="btn btn-default"
                                                          disabled={false}
                                                          name="set3"
                                                          type="button"
                                                        >
                                                          Set 3
                                                        </button>
                                                      </Button>
                                                    </Button>
                                                  </FieldWrapper>
                                                </FormFieldHideWrapper>
                                              </FormConditionWrapper>
                                            </span>
                                          </InputGroupButton>
                                        </InputAddonButtonGroup>
                                      </FieldWrapper>
                                    </FormFieldHideWrapper>
                                  </FormConditionWrapper>
                                  <FormControl
                                    bsClass="form-control"
                                    componentClass="input"
                                    id="text_box_21"
                                    name="text_box_21"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    title="Text Box With Input Addon"
                                    value=""
                                  >
                                    <input
                                      className="form-control"
                                      id="text_box_21"
                                      name="text_box_21"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      title="Text Box With Input Addon"
                                      value=""
                                    />
                                  </FormControl>
                                </span>
                              </InputGroup>
                            </div>
                          </FormGroup>
                        </FieldInterface>
                      </TextField>
                    </Field>
                  </ReactFinalForm(Field)>
                </FieldProvider>
              </FieldWrapper>
            </FormFieldHideWrapper>
          </FormConditionWrapper>
        </form>
      </Form>
    </FormWapper>
  </ReactFinalForm>
</FormRenderer>
`;

exports[`<Input Addon> should render single after input addon correctly 1`] = `
<FormRenderer
  buttonClassName=""
  buttonsLabels={Object {}}
  clearOnUnmount={false}
  disableSubmit={Array []}
  formFieldsMapper={
    Object {
      "button": [Function],
      "checkbox": [Function],
      "date-picker": [Function],
      "input-addon-button-group": [Function],
      "input-addon-group": [Function],
      "plain-text": [Function],
      "radio": [Function],
      "select-field": [Function],
      "sub-form": [Function],
      "switch-field": [Function],
      "tabs": [Function],
      "text-field": [Function],
      "textarea-field": [Function],
      "time-picker": [Function],
      "wizard": [Function],
    }
  }
  initialValues={Object {}}
  layoutMapper={
    Object {
      "Button": [Function],
      "ButtonGroup": [Function],
      "Description": [Function],
      "FormWrapper": [Function],
      "Title": [Function],
    }
  }
  onCancel={[Function]}
  onSubmit={[MockFunction]}
  schema={
    Object {
      "fields": Array [
        Object {
          "component": "text-field",
          "inputAddon": Object {
            "after": Object {
              "fields": Array [
                Object {
                  "component": "plain-text",
                  "label": "-",
                  "name": "name1",
                  "variant": "span",
                },
              ],
            },
          },
          "label": "Text Box With Input Addon",
          "name": "text_box_21",
          "title": "Text Box With Input Addon",
        },
      ],
    }
  }
  showFormControls={false}
>
  <ReactFinalForm
    decorators={
      Array [
        [Function],
      ]
    }
    initialValues={Object {}}
    mutators={
      Object {
        "concat": [Function],
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "removeBatch": [Function],
        "shift": [Function],
        "swap": [Function],
        "unshift": [Function],
        "update": [Function],
      }
    }
    onSubmit={[MockFunction]}
    render={[Function]}
    subscription={
      Object {
        "pristine": true,
        "submitting": true,
        "valid": true,
      }
    }
  >
    <FormWapper
      onSubmit={[Function]}
    >
      <Form
        bsClass="form"
        componentClass="form"
        horizontal={false}
        inline={false}
        onSubmit={[Function]}
      >
        <form
          className=""
          onSubmit={[Function]}
        >
          <FormConditionWrapper>
            <FormFieldHideWrapper
              hideField={false}
            >
              <FieldWrapper
                component={[Function]}
                componentType="text-field"
                formOptions={
                  Object {
                    "batch": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearOnUnmount": false,
                    "clearedValue": undefined,
                    "concat": [Function],
                    "destroyOnUnregister": false,
                    "focus": [Function],
                    "getFieldState": [Function],
                    "getRegisteredFields": [Function],
                    "getState": [Function],
                    "handleSubmit": [Function],
                    "initialize": [Function],
                    "insert": [Function],
                    "isValidationPaused": [Function],
                    "move": [Function],
                    "onCancel": [Function],
                    "onSubmit": [MockFunction],
                    "pauseValidation": [Function],
                    "pop": [Function],
                    "pristine": true,
                    "push": [Function],
                    "registerField": [Function],
                    "remove": [Function],
                    "removeBatch": [Function],
                    "renderForm": [Function],
                    "reset": [Function],
                    "resetFieldState": [Function],
                    "resumeValidation": [Function],
                    "setConfig": [Function],
                    "shift": [Function],
                    "submit": [Function],
                    "subscribe": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                    "update": [Function],
                    "valid": true,
                  }
                }
                inputAddon={
                  Object {
                    "after": Object {
                      "fields": Array [
                        Object {
                          "component": "plain-text",
                          "label": "-",
                          "name": "name1",
                          "variant": "span",
                        },
                      ],
                    },
                  }
                }
                label="Text Box With Input Addon"
                name="text_box_21"
                title="Text Box With Input Addon"
                validate={
                  Array [
                    undefined,
                  ]
                }
              >
                <FieldProvider
                  FieldArrayProvider={[Function]}
                  FieldProvider={[Function]}
                  component={[Function]}
                  formOptions={
                    Object {
                      "batch": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearOnUnmount": false,
                      "clearedValue": undefined,
                      "concat": [Function],
                      "destroyOnUnregister": false,
                      "focus": [Function],
                      "getFieldState": [Function],
                      "getRegisteredFields": [Function],
                      "getState": [Function],
                      "handleSubmit": [Function],
                      "initialize": [Function],
                      "insert": [Function],
                      "isValidationPaused": [Function],
                      "move": [Function],
                      "onCancel": [Function],
                      "onSubmit": [MockFunction],
                      "pauseValidation": [Function],
                      "pop": [Function],
                      "pristine": true,
                      "push": [Function],
                      "registerField": [Function],
                      "remove": [Function],
                      "removeBatch": [Function],
                      "renderForm": [Function],
                      "reset": [Function],
                      "resetFieldState": [Function],
                      "resumeValidation": [Function],
                      "setConfig": [Function],
                      "shift": [Function],
                      "submit": [Function],
                      "subscribe": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                      "update": [Function],
                      "valid": true,
                    }
                  }
                  inputAddon={
                    Object {
                      "after": Object {
                        "fields": Array [
                          Object {
                            "component": "plain-text",
                            "label": "-",
                            "name": "name1",
                            "variant": "span",
                          },
                        ],
                      },
                    }
                  }
                  label="Text Box With Input Addon"
                  name="text_box_21"
                  title="Text Box With Input Addon"
                  validate={[Function]}
                >
                  <ReactFinalForm(Field)
                    FieldArrayProvider={[Function]}
                    FieldProvider={[Function]}
                    formOptions={
                      Object {
                        "batch": [Function],
                        "blur": [Function],
                        "change": [Function],
                        "clearOnUnmount": false,
                        "clearedValue": undefined,
                        "concat": [Function],
                        "destroyOnUnregister": false,
                        "focus": [Function],
                        "getFieldState": [Function],
                        "getRegisteredFields": [Function],
                        "getState": [Function],
                        "handleSubmit": [Function],
                        "initialize": [Function],
                        "insert": [Function],
                        "isValidationPaused": [Function],
                        "move": [Function],
                        "onCancel": [Function],
                        "onSubmit": [MockFunction],
                        "pauseValidation": [Function],
                        "pop": [Function],
                        "pristine": true,
                        "push": [Function],
                        "registerField": [Function],
                        "remove": [Function],
                        "removeBatch": [Function],
                        "renderForm": [Function],
                        "reset": [Function],
                        "resetFieldState": [Function],
                        "resumeValidation": [Function],
                        "setConfig": [Function],
                        "shift": [Function],
                        "submit": [Function],
                        "subscribe": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                        "update": [Function],
                        "valid": true,
                      }
                    }
                    inputAddon={
                      Object {
                        "after": Object {
                          "fields": Array [
                            Object {
                              "component": "plain-text",
                              "label": "-",
                              "name": "name1",
                              "variant": "span",
                            },
                          ],
                        },
                      }
                    }
                    label="Text Box With Input Addon"
                    name="text_box_21"
                    render={[Function]}
                    title="Text Box With Input Addon"
                    validate={[Function]}
                  >
                    <Field
                      FieldArrayProvider={[Function]}
                      FieldProvider={[Function]}
                      formOptions={
                        Object {
                          "batch": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "clearOnUnmount": false,
                          "clearedValue": undefined,
                          "concat": [Function],
                          "destroyOnUnregister": false,
                          "focus": [Function],
                          "getFieldState": [Function],
                          "getRegisteredFields": [Function],
                          "getState": [Function],
                          "handleSubmit": [Function],
                          "initialize": [Function],
                          "insert": [Function],
                          "isValidationPaused": [Function],
                          "move": [Function],
                          "onCancel": [Function],
                          "onSubmit": [MockFunction],
                          "pauseValidation": [Function],
                          "pop": [Function],
                          "pristine": true,
                          "push": [Function],
                          "registerField": [Function],
                          "remove": [Function],
                          "removeBatch": [Function],
                          "renderForm": [Function],
                          "reset": [Function],
                          "resetFieldState": [Function],
                          "resumeValidation": [Function],
                          "setConfig": [Function],
                          "shift": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                          "update": [Function],
                          "valid": true,
                        }
                      }
                      format={[Function]}
                      inputAddon={
                        Object {
                          "after": Object {
                            "fields": Array [
                              Object {
                                "component": "plain-text",
                                "label": "-",
                                "name": "name1",
                                "variant": "span",
                              },
                            ],
                          },
                        }
                      }
                      label="Text Box With Input Addon"
                      name="text_box_21"
                      parse={[Function]}
                      reactFinalForm={
                        Object {
                          "batch": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "destroyOnUnregister": false,
                          "focus": [Function],
                          "getFieldState": [Function],
                          "getRegisteredFields": [Function],
                          "getState": [Function],
                          "initialize": [Function],
                          "isValidationPaused": [Function],
                          "mutators": Object {
                            "concat": [Function],
                            "insert": [Function],
                            "move": [Function],
                            "pop": [Function],
                            "push": [Function],
                            "remove": [Function],
                            "removeBatch": [Function],
                            "shift": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                            "update": [Function],
                          },
                          "pauseValidation": [Function],
                          "registerField": [Function],
                          "reset": [Function],
                          "resetFieldState": [Function],
                          "resumeValidation": [Function],
                          "setConfig": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                        }
                      }
                      render={[Function]}
                      title="Text Box With Input Addon"
                      validate={[Function]}
                    >
                      <TextField
                        FieldArrayProvider={[Function]}
                        FieldProvider={[Function]}
                        formOptions={
                          Object {
                            "batch": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearOnUnmount": false,
                            "clearedValue": undefined,
                            "concat": [Function],
                            "destroyOnUnregister": false,
                            "focus": [Function],
                            "getFieldState": [Function],
                            "getRegisteredFields": [Function],
                            "getState": [Function],
                            "handleSubmit": [Function],
                            "initialize": [Function],
                            "insert": [Function],
                            "isValidationPaused": [Function],
                            "move": [Function],
                            "onCancel": [Function],
                            "onSubmit": [MockFunction],
                            "pauseValidation": [Function],
                            "pop": [Function],
                            "pristine": true,
                            "push": [Function],
                            "registerField": [Function],
                            "remove": [Function],
                            "removeBatch": [Function],
                            "renderForm": [Function],
                            "reset": [Function],
                            "resetFieldState": [Function],
                            "resumeValidation": [Function],
                            "setConfig": [Function],
                            "shift": [Function],
                            "submit": [Function],
                            "subscribe": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                            "update": [Function],
                            "valid": true,
                          }
                        }
                        input={
                          Object {
                            "name": "text_box_21",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "",
                          }
                        }
                        inputAddon={
                          Object {
                            "after": Object {
                              "fields": Array [
                                Object {
                                  "component": "plain-text",
                                  "label": "-",
                                  "name": "name1",
                                  "variant": "span",
                                },
                              ],
                            },
                          }
                        }
                        label="Text Box With Input Addon"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "modified": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        title="Text Box With Input Addon"
                      >
                        <FieldInterface
                          FieldArrayProvider={[Function]}
                          FieldProvider={[Function]}
                          componentType="text-field"
                          formOptions={
                            Object {
                              "batch": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearOnUnmount": false,
                              "clearedValue": undefined,
                              "concat": [Function],
                              "destroyOnUnregister": false,
                              "focus": [Function],
                              "getFieldState": [Function],
                              "getRegisteredFields": [Function],
                              "getState": [Function],
                              "handleSubmit": [Function],
                              "initialize": [Function],
                              "insert": [Function],
                              "isValidationPaused": [Function],
                              "move": [Function],
                              "onCancel": [Function],
                              "onSubmit": [MockFunction],
                              "pauseValidation": [Function],
                              "pop": [Function],
                              "pristine": true,
                              "push": [Function],
                              "registerField": [Function],
                              "remove": [Function],
                              "removeBatch": [Function],
                              "renderForm": [Function],
                              "reset": [Function],
                              "resetFieldState": [Function],
                              "resumeValidation": [Function],
                              "setConfig": [Function],
                              "shift": [Function],
                              "submit": [Function],
                              "subscribe": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                              "update": [Function],
                              "valid": true,
                            }
                          }
                          input={
                            Object {
                              "name": "text_box_21",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          inputAddon={
                            Object {
                              "after": Object {
                                "fields": Array [
                                  Object {
                                    "component": "plain-text",
                                    "label": "-",
                                    "name": "name1",
                                    "variant": "span",
                                  },
                                ],
                              },
                            }
                          }
                          label="Text Box With Input Addon"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "modified": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          name="text_box_21"
                          title="Text Box With Input Addon"
                        >
                          <FormGroup
                            bsClass="form-group"
                            validationState={null}
                          >
                            <div
                              className="form-group"
                            >
                              <ControlLabel
                                bsClass="control-label"
                                srOnly={false}
                              >
                                <label
                                  className="control-label"
                                >
                                  Text Box With Input Addon
                                </label>
                              </ControlLabel>
                              <InputGroup
                                bsClass="input-group"
                              >
                                <span
                                  className="input-group"
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    componentClass="input"
                                    id="text_box_21"
                                    name="text_box_21"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    title="Text Box With Input Addon"
                                    value=""
                                  >
                                    <input
                                      className="form-control"
                                      id="text_box_21"
                                      name="text_box_21"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      title="Text Box With Input Addon"
                                      value=""
                                    />
                                  </FormControl>
                                  <FormConditionWrapper>
                                    <FormFieldHideWrapper
                                      hideField={false}
                                    >
                                      <FieldWrapper
                                        component={[Function]}
                                        componentType="plain-text"
                                        formOptions={
                                          Object {
                                            "batch": [Function],
                                            "blur": [Function],
                                            "change": [Function],
                                            "clearOnUnmount": false,
                                            "clearedValue": undefined,
                                            "concat": [Function],
                                            "destroyOnUnregister": false,
                                            "focus": [Function],
                                            "getFieldState": [Function],
                                            "getRegisteredFields": [Function],
                                            "getState": [Function],
                                            "handleSubmit": [Function],
                                            "initialize": [Function],
                                            "insert": [Function],
                                            "isValidationPaused": [Function],
                                            "move": [Function],
                                            "onCancel": [Function],
                                            "onSubmit": [MockFunction],
                                            "pauseValidation": [Function],
                                            "pop": [Function],
                                            "pristine": true,
                                            "push": [Function],
                                            "registerField": [Function],
                                            "remove": [Function],
                                            "removeBatch": [Function],
                                            "renderForm": [Function],
                                            "reset": [Function],
                                            "resetFieldState": [Function],
                                            "resumeValidation": [Function],
                                            "setConfig": [Function],
                                            "shift": [Function],
                                            "submit": [Function],
                                            "subscribe": [Function],
                                            "swap": [Function],
                                            "unshift": [Function],
                                            "update": [Function],
                                            "valid": true,
                                          }
                                        }
                                        label="-"
                                        name="name1"
                                        validate={
                                          Array [
                                            undefined,
                                          ]
                                        }
                                        variant="span"
                                      >
                                        <PlainText
                                          FieldProvider={[Function]}
                                          FormSpyProvider={[Function]}
                                          formOptions={
                                            Object {
                                              "batch": [Function],
                                              "blur": [Function],
                                              "change": [Function],
                                              "clearOnUnmount": false,
                                              "clearedValue": undefined,
                                              "concat": [Function],
                                              "destroyOnUnregister": false,
                                              "focus": [Function],
                                              "getFieldState": [Function],
                                              "getRegisteredFields": [Function],
                                              "getState": [Function],
                                              "handleSubmit": [Function],
                                              "initialize": [Function],
                                              "insert": [Function],
                                              "isValidationPaused": [Function],
                                              "move": [Function],
                                              "onCancel": [Function],
                                              "onSubmit": [MockFunction],
                                              "pauseValidation": [Function],
                                              "pop": [Function],
                                              "pristine": true,
                                              "push": [Function],
                                              "registerField": [Function],
                                              "remove": [Function],
                                              "removeBatch": [Function],
                                              "renderForm": [Function],
                                              "reset": [Function],
                                              "resetFieldState": [Function],
                                              "resumeValidation": [Function],
                                              "setConfig": [Function],
                                              "shift": [Function],
                                              "submit": [Function],
                                              "subscribe": [Function],
                                              "swap": [Function],
                                              "unshift": [Function],
                                              "update": [Function],
                                              "valid": true,
                                            }
                                          }
                                          label="-"
                                          name="name1"
                                          validate={[Function]}
                                          variant="span"
                                        >
                                          <span
                                            key="name1-0"
                                          >
                                            -
                                          </span>
                                        </PlainText>
                                      </FieldWrapper>
                                    </FormFieldHideWrapper>
                                  </FormConditionWrapper>
                                </span>
                              </InputGroup>
                            </div>
                          </FormGroup>
                        </FieldInterface>
                      </TextField>
                    </Field>
                  </ReactFinalForm(Field)>
                </FieldProvider>
              </FieldWrapper>
            </FormFieldHideWrapper>
          </FormConditionWrapper>
        </form>
      </Form>
    </FormWapper>
  </ReactFinalForm>
</FormRenderer>
`;

exports[`<Input Addon> should render single before input addon correctly 1`] = `
<FormRenderer
  buttonClassName=""
  buttonsLabels={Object {}}
  clearOnUnmount={false}
  disableSubmit={Array []}
  formFieldsMapper={
    Object {
      "button": [Function],
      "checkbox": [Function],
      "date-picker": [Function],
      "input-addon-button-group": [Function],
      "input-addon-group": [Function],
      "plain-text": [Function],
      "radio": [Function],
      "select-field": [Function],
      "sub-form": [Function],
      "switch-field": [Function],
      "tabs": [Function],
      "text-field": [Function],
      "textarea-field": [Function],
      "time-picker": [Function],
      "wizard": [Function],
    }
  }
  initialValues={Object {}}
  layoutMapper={
    Object {
      "Button": [Function],
      "ButtonGroup": [Function],
      "Description": [Function],
      "FormWrapper": [Function],
      "Title": [Function],
    }
  }
  onCancel={[Function]}
  onSubmit={[MockFunction]}
  schema={
    Object {
      "fields": Array [
        Object {
          "component": "text-field",
          "inputAddon": Object {
            "before": Object {
              "fields": Array [
                Object {
                  "component": "plain-text",
                  "label": "-",
                  "name": "name1",
                  "variant": "span",
                },
              ],
            },
          },
          "label": "Text Box With Input Addon",
          "name": "text_box_21",
          "title": "Text Box With Input Addon",
        },
      ],
    }
  }
  showFormControls={false}
>
  <ReactFinalForm
    decorators={
      Array [
        [Function],
      ]
    }
    initialValues={Object {}}
    mutators={
      Object {
        "concat": [Function],
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "removeBatch": [Function],
        "shift": [Function],
        "swap": [Function],
        "unshift": [Function],
        "update": [Function],
      }
    }
    onSubmit={[MockFunction]}
    render={[Function]}
    subscription={
      Object {
        "pristine": true,
        "submitting": true,
        "valid": true,
      }
    }
  >
    <FormWapper
      onSubmit={[Function]}
    >
      <Form
        bsClass="form"
        componentClass="form"
        horizontal={false}
        inline={false}
        onSubmit={[Function]}
      >
        <form
          className=""
          onSubmit={[Function]}
        >
          <FormConditionWrapper>
            <FormFieldHideWrapper
              hideField={false}
            >
              <FieldWrapper
                component={[Function]}
                componentType="text-field"
                formOptions={
                  Object {
                    "batch": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearOnUnmount": false,
                    "clearedValue": undefined,
                    "concat": [Function],
                    "destroyOnUnregister": false,
                    "focus": [Function],
                    "getFieldState": [Function],
                    "getRegisteredFields": [Function],
                    "getState": [Function],
                    "handleSubmit": [Function],
                    "initialize": [Function],
                    "insert": [Function],
                    "isValidationPaused": [Function],
                    "move": [Function],
                    "onCancel": [Function],
                    "onSubmit": [MockFunction],
                    "pauseValidation": [Function],
                    "pop": [Function],
                    "pristine": true,
                    "push": [Function],
                    "registerField": [Function],
                    "remove": [Function],
                    "removeBatch": [Function],
                    "renderForm": [Function],
                    "reset": [Function],
                    "resetFieldState": [Function],
                    "resumeValidation": [Function],
                    "setConfig": [Function],
                    "shift": [Function],
                    "submit": [Function],
                    "subscribe": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                    "update": [Function],
                    "valid": true,
                  }
                }
                inputAddon={
                  Object {
                    "before": Object {
                      "fields": Array [
                        Object {
                          "component": "plain-text",
                          "label": "-",
                          "name": "name1",
                          "variant": "span",
                        },
                      ],
                    },
                  }
                }
                label="Text Box With Input Addon"
                name="text_box_21"
                title="Text Box With Input Addon"
                validate={
                  Array [
                    undefined,
                  ]
                }
              >
                <FieldProvider
                  FieldArrayProvider={[Function]}
                  FieldProvider={[Function]}
                  component={[Function]}
                  formOptions={
                    Object {
                      "batch": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearOnUnmount": false,
                      "clearedValue": undefined,
                      "concat": [Function],
                      "destroyOnUnregister": false,
                      "focus": [Function],
                      "getFieldState": [Function],
                      "getRegisteredFields": [Function],
                      "getState": [Function],
                      "handleSubmit": [Function],
                      "initialize": [Function],
                      "insert": [Function],
                      "isValidationPaused": [Function],
                      "move": [Function],
                      "onCancel": [Function],
                      "onSubmit": [MockFunction],
                      "pauseValidation": [Function],
                      "pop": [Function],
                      "pristine": true,
                      "push": [Function],
                      "registerField": [Function],
                      "remove": [Function],
                      "removeBatch": [Function],
                      "renderForm": [Function],
                      "reset": [Function],
                      "resetFieldState": [Function],
                      "resumeValidation": [Function],
                      "setConfig": [Function],
                      "shift": [Function],
                      "submit": [Function],
                      "subscribe": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                      "update": [Function],
                      "valid": true,
                    }
                  }
                  inputAddon={
                    Object {
                      "before": Object {
                        "fields": Array [
                          Object {
                            "component": "plain-text",
                            "label": "-",
                            "name": "name1",
                            "variant": "span",
                          },
                        ],
                      },
                    }
                  }
                  label="Text Box With Input Addon"
                  name="text_box_21"
                  title="Text Box With Input Addon"
                  validate={[Function]}
                >
                  <ReactFinalForm(Field)
                    FieldArrayProvider={[Function]}
                    FieldProvider={[Function]}
                    formOptions={
                      Object {
                        "batch": [Function],
                        "blur": [Function],
                        "change": [Function],
                        "clearOnUnmount": false,
                        "clearedValue": undefined,
                        "concat": [Function],
                        "destroyOnUnregister": false,
                        "focus": [Function],
                        "getFieldState": [Function],
                        "getRegisteredFields": [Function],
                        "getState": [Function],
                        "handleSubmit": [Function],
                        "initialize": [Function],
                        "insert": [Function],
                        "isValidationPaused": [Function],
                        "move": [Function],
                        "onCancel": [Function],
                        "onSubmit": [MockFunction],
                        "pauseValidation": [Function],
                        "pop": [Function],
                        "pristine": true,
                        "push": [Function],
                        "registerField": [Function],
                        "remove": [Function],
                        "removeBatch": [Function],
                        "renderForm": [Function],
                        "reset": [Function],
                        "resetFieldState": [Function],
                        "resumeValidation": [Function],
                        "setConfig": [Function],
                        "shift": [Function],
                        "submit": [Function],
                        "subscribe": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                        "update": [Function],
                        "valid": true,
                      }
                    }
                    inputAddon={
                      Object {
                        "before": Object {
                          "fields": Array [
                            Object {
                              "component": "plain-text",
                              "label": "-",
                              "name": "name1",
                              "variant": "span",
                            },
                          ],
                        },
                      }
                    }
                    label="Text Box With Input Addon"
                    name="text_box_21"
                    render={[Function]}
                    title="Text Box With Input Addon"
                    validate={[Function]}
                  >
                    <Field
                      FieldArrayProvider={[Function]}
                      FieldProvider={[Function]}
                      formOptions={
                        Object {
                          "batch": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "clearOnUnmount": false,
                          "clearedValue": undefined,
                          "concat": [Function],
                          "destroyOnUnregister": false,
                          "focus": [Function],
                          "getFieldState": [Function],
                          "getRegisteredFields": [Function],
                          "getState": [Function],
                          "handleSubmit": [Function],
                          "initialize": [Function],
                          "insert": [Function],
                          "isValidationPaused": [Function],
                          "move": [Function],
                          "onCancel": [Function],
                          "onSubmit": [MockFunction],
                          "pauseValidation": [Function],
                          "pop": [Function],
                          "pristine": true,
                          "push": [Function],
                          "registerField": [Function],
                          "remove": [Function],
                          "removeBatch": [Function],
                          "renderForm": [Function],
                          "reset": [Function],
                          "resetFieldState": [Function],
                          "resumeValidation": [Function],
                          "setConfig": [Function],
                          "shift": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                          "update": [Function],
                          "valid": true,
                        }
                      }
                      format={[Function]}
                      inputAddon={
                        Object {
                          "before": Object {
                            "fields": Array [
                              Object {
                                "component": "plain-text",
                                "label": "-",
                                "name": "name1",
                                "variant": "span",
                              },
                            ],
                          },
                        }
                      }
                      label="Text Box With Input Addon"
                      name="text_box_21"
                      parse={[Function]}
                      reactFinalForm={
                        Object {
                          "batch": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "destroyOnUnregister": false,
                          "focus": [Function],
                          "getFieldState": [Function],
                          "getRegisteredFields": [Function],
                          "getState": [Function],
                          "initialize": [Function],
                          "isValidationPaused": [Function],
                          "mutators": Object {
                            "concat": [Function],
                            "insert": [Function],
                            "move": [Function],
                            "pop": [Function],
                            "push": [Function],
                            "remove": [Function],
                            "removeBatch": [Function],
                            "shift": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                            "update": [Function],
                          },
                          "pauseValidation": [Function],
                          "registerField": [Function],
                          "reset": [Function],
                          "resetFieldState": [Function],
                          "resumeValidation": [Function],
                          "setConfig": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                        }
                      }
                      render={[Function]}
                      title="Text Box With Input Addon"
                      validate={[Function]}
                    >
                      <TextField
                        FieldArrayProvider={[Function]}
                        FieldProvider={[Function]}
                        formOptions={
                          Object {
                            "batch": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearOnUnmount": false,
                            "clearedValue": undefined,
                            "concat": [Function],
                            "destroyOnUnregister": false,
                            "focus": [Function],
                            "getFieldState": [Function],
                            "getRegisteredFields": [Function],
                            "getState": [Function],
                            "handleSubmit": [Function],
                            "initialize": [Function],
                            "insert": [Function],
                            "isValidationPaused": [Function],
                            "move": [Function],
                            "onCancel": [Function],
                            "onSubmit": [MockFunction],
                            "pauseValidation": [Function],
                            "pop": [Function],
                            "pristine": true,
                            "push": [Function],
                            "registerField": [Function],
                            "remove": [Function],
                            "removeBatch": [Function],
                            "renderForm": [Function],
                            "reset": [Function],
                            "resetFieldState": [Function],
                            "resumeValidation": [Function],
                            "setConfig": [Function],
                            "shift": [Function],
                            "submit": [Function],
                            "subscribe": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                            "update": [Function],
                            "valid": true,
                          }
                        }
                        input={
                          Object {
                            "name": "text_box_21",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "",
                          }
                        }
                        inputAddon={
                          Object {
                            "before": Object {
                              "fields": Array [
                                Object {
                                  "component": "plain-text",
                                  "label": "-",
                                  "name": "name1",
                                  "variant": "span",
                                },
                              ],
                            },
                          }
                        }
                        label="Text Box With Input Addon"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "modified": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        title="Text Box With Input Addon"
                      >
                        <FieldInterface
                          FieldArrayProvider={[Function]}
                          FieldProvider={[Function]}
                          componentType="text-field"
                          formOptions={
                            Object {
                              "batch": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearOnUnmount": false,
                              "clearedValue": undefined,
                              "concat": [Function],
                              "destroyOnUnregister": false,
                              "focus": [Function],
                              "getFieldState": [Function],
                              "getRegisteredFields": [Function],
                              "getState": [Function],
                              "handleSubmit": [Function],
                              "initialize": [Function],
                              "insert": [Function],
                              "isValidationPaused": [Function],
                              "move": [Function],
                              "onCancel": [Function],
                              "onSubmit": [MockFunction],
                              "pauseValidation": [Function],
                              "pop": [Function],
                              "pristine": true,
                              "push": [Function],
                              "registerField": [Function],
                              "remove": [Function],
                              "removeBatch": [Function],
                              "renderForm": [Function],
                              "reset": [Function],
                              "resetFieldState": [Function],
                              "resumeValidation": [Function],
                              "setConfig": [Function],
                              "shift": [Function],
                              "submit": [Function],
                              "subscribe": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                              "update": [Function],
                              "valid": true,
                            }
                          }
                          input={
                            Object {
                              "name": "text_box_21",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          inputAddon={
                            Object {
                              "before": Object {
                                "fields": Array [
                                  Object {
                                    "component": "plain-text",
                                    "label": "-",
                                    "name": "name1",
                                    "variant": "span",
                                  },
                                ],
                              },
                            }
                          }
                          label="Text Box With Input Addon"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "modified": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          name="text_box_21"
                          title="Text Box With Input Addon"
                        >
                          <FormGroup
                            bsClass="form-group"
                            validationState={null}
                          >
                            <div
                              className="form-group"
                            >
                              <ControlLabel
                                bsClass="control-label"
                                srOnly={false}
                              >
                                <label
                                  className="control-label"
                                >
                                  Text Box With Input Addon
                                </label>
                              </ControlLabel>
                              <InputGroup
                                bsClass="input-group"
                              >
                                <span
                                  className="input-group"
                                >
                                  <FormConditionWrapper>
                                    <FormFieldHideWrapper
                                      hideField={false}
                                    >
                                      <FieldWrapper
                                        component={[Function]}
                                        componentType="plain-text"
                                        formOptions={
                                          Object {
                                            "batch": [Function],
                                            "blur": [Function],
                                            "change": [Function],
                                            "clearOnUnmount": false,
                                            "clearedValue": undefined,
                                            "concat": [Function],
                                            "destroyOnUnregister": false,
                                            "focus": [Function],
                                            "getFieldState": [Function],
                                            "getRegisteredFields": [Function],
                                            "getState": [Function],
                                            "handleSubmit": [Function],
                                            "initialize": [Function],
                                            "insert": [Function],
                                            "isValidationPaused": [Function],
                                            "move": [Function],
                                            "onCancel": [Function],
                                            "onSubmit": [MockFunction],
                                            "pauseValidation": [Function],
                                            "pop": [Function],
                                            "pristine": true,
                                            "push": [Function],
                                            "registerField": [Function],
                                            "remove": [Function],
                                            "removeBatch": [Function],
                                            "renderForm": [Function],
                                            "reset": [Function],
                                            "resetFieldState": [Function],
                                            "resumeValidation": [Function],
                                            "setConfig": [Function],
                                            "shift": [Function],
                                            "submit": [Function],
                                            "subscribe": [Function],
                                            "swap": [Function],
                                            "unshift": [Function],
                                            "update": [Function],
                                            "valid": true,
                                          }
                                        }
                                        label="-"
                                        name="name1"
                                        validate={
                                          Array [
                                            undefined,
                                          ]
                                        }
                                        variant="span"
                                      >
                                        <PlainText
                                          FieldProvider={[Function]}
                                          FormSpyProvider={[Function]}
                                          formOptions={
                                            Object {
                                              "batch": [Function],
                                              "blur": [Function],
                                              "change": [Function],
                                              "clearOnUnmount": false,
                                              "clearedValue": undefined,
                                              "concat": [Function],
                                              "destroyOnUnregister": false,
                                              "focus": [Function],
                                              "getFieldState": [Function],
                                              "getRegisteredFields": [Function],
                                              "getState": [Function],
                                              "handleSubmit": [Function],
                                              "initialize": [Function],
                                              "insert": [Function],
                                              "isValidationPaused": [Function],
                                              "move": [Function],
                                              "onCancel": [Function],
                                              "onSubmit": [MockFunction],
                                              "pauseValidation": [Function],
                                              "pop": [Function],
                                              "pristine": true,
                                              "push": [Function],
                                              "registerField": [Function],
                                              "remove": [Function],
                                              "removeBatch": [Function],
                                              "renderForm": [Function],
                                              "reset": [Function],
                                              "resetFieldState": [Function],
                                              "resumeValidation": [Function],
                                              "setConfig": [Function],
                                              "shift": [Function],
                                              "submit": [Function],
                                              "subscribe": [Function],
                                              "swap": [Function],
                                              "unshift": [Function],
                                              "update": [Function],
                                              "valid": true,
                                            }
                                          }
                                          label="-"
                                          name="name1"
                                          validate={[Function]}
                                          variant="span"
                                        >
                                          <span
                                            key="name1-0"
                                          >
                                            -
                                          </span>
                                        </PlainText>
                                      </FieldWrapper>
                                    </FormFieldHideWrapper>
                                  </FormConditionWrapper>
                                  <FormControl
                                    bsClass="form-control"
                                    componentClass="input"
                                    id="text_box_21"
                                    name="text_box_21"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    title="Text Box With Input Addon"
                                    value=""
                                  >
                                    <input
                                      className="form-control"
                                      id="text_box_21"
                                      name="text_box_21"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      title="Text Box With Input Addon"
                                      value=""
                                    />
                                  </FormControl>
                                </span>
                              </InputGroup>
                            </div>
                          </FormGroup>
                        </FieldInterface>
                      </TextField>
                    </Field>
                  </ReactFinalForm(Field)>
                </FieldProvider>
              </FieldWrapper>
            </FormFieldHideWrapper>
          </FormConditionWrapper>
        </form>
      </Form>
    </FormWapper>
  </ReactFinalForm>
</FormRenderer>
`;

exports[`<Input Addon> should render single button after input addon correctly 1`] = `
<FormRenderer
  buttonClassName=""
  buttonsLabels={Object {}}
  clearOnUnmount={false}
  disableSubmit={Array []}
  formFieldsMapper={
    Object {
      "button": [Function],
      "checkbox": [Function],
      "date-picker": [Function],
      "input-addon-button-group": [Function],
      "input-addon-group": [Function],
      "plain-text": [Function],
      "radio": [Function],
      "select-field": [Function],
      "sub-form": [Function],
      "switch-field": [Function],
      "tabs": [Function],
      "text-field": [Function],
      "textarea-field": [Function],
      "time-picker": [Function],
      "wizard": [Function],
    }
  }
  initialValues={Object {}}
  layoutMapper={
    Object {
      "Button": [Function],
      "ButtonGroup": [Function],
      "Description": [Function],
      "FormWrapper": [Function],
      "Title": [Function],
    }
  }
  onCancel={[Function]}
  onSubmit={[MockFunction]}
  schema={
    Object {
      "fields": Array [
        Object {
          "component": "text-field",
          "inputAddon": Object {
            "after": Object {
              "fields": Array [
                Object {
                  "component": "button",
                  "label": "Set 3",
                  "name": "set3",
                },
              ],
            },
          },
          "label": "Text Box With Input Addon",
          "name": "text_box_21",
          "title": "Text Box With Input Addon",
        },
      ],
    }
  }
  showFormControls={false}
>
  <ReactFinalForm
    decorators={
      Array [
        [Function],
      ]
    }
    initialValues={Object {}}
    mutators={
      Object {
        "concat": [Function],
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "removeBatch": [Function],
        "shift": [Function],
        "swap": [Function],
        "unshift": [Function],
        "update": [Function],
      }
    }
    onSubmit={[MockFunction]}
    render={[Function]}
    subscription={
      Object {
        "pristine": true,
        "submitting": true,
        "valid": true,
      }
    }
  >
    <FormWapper
      onSubmit={[Function]}
    >
      <Form
        bsClass="form"
        componentClass="form"
        horizontal={false}
        inline={false}
        onSubmit={[Function]}
      >
        <form
          className=""
          onSubmit={[Function]}
        >
          <FormConditionWrapper>
            <FormFieldHideWrapper
              hideField={false}
            >
              <FieldWrapper
                component={[Function]}
                componentType="text-field"
                formOptions={
                  Object {
                    "batch": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearOnUnmount": false,
                    "clearedValue": undefined,
                    "concat": [Function],
                    "destroyOnUnregister": false,
                    "focus": [Function],
                    "getFieldState": [Function],
                    "getRegisteredFields": [Function],
                    "getState": [Function],
                    "handleSubmit": [Function],
                    "initialize": [Function],
                    "insert": [Function],
                    "isValidationPaused": [Function],
                    "move": [Function],
                    "onCancel": [Function],
                    "onSubmit": [MockFunction],
                    "pauseValidation": [Function],
                    "pop": [Function],
                    "pristine": true,
                    "push": [Function],
                    "registerField": [Function],
                    "remove": [Function],
                    "removeBatch": [Function],
                    "renderForm": [Function],
                    "reset": [Function],
                    "resetFieldState": [Function],
                    "resumeValidation": [Function],
                    "setConfig": [Function],
                    "shift": [Function],
                    "submit": [Function],
                    "subscribe": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                    "update": [Function],
                    "valid": true,
                  }
                }
                inputAddon={
                  Object {
                    "after": Object {
                      "fields": Array [
                        Object {
                          "component": "button",
                          "label": "Set 3",
                          "name": "set3",
                        },
                      ],
                    },
                  }
                }
                label="Text Box With Input Addon"
                name="text_box_21"
                title="Text Box With Input Addon"
                validate={
                  Array [
                    undefined,
                  ]
                }
              >
                <FieldProvider
                  FieldArrayProvider={[Function]}
                  FieldProvider={[Function]}
                  component={[Function]}
                  formOptions={
                    Object {
                      "batch": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearOnUnmount": false,
                      "clearedValue": undefined,
                      "concat": [Function],
                      "destroyOnUnregister": false,
                      "focus": [Function],
                      "getFieldState": [Function],
                      "getRegisteredFields": [Function],
                      "getState": [Function],
                      "handleSubmit": [Function],
                      "initialize": [Function],
                      "insert": [Function],
                      "isValidationPaused": [Function],
                      "move": [Function],
                      "onCancel": [Function],
                      "onSubmit": [MockFunction],
                      "pauseValidation": [Function],
                      "pop": [Function],
                      "pristine": true,
                      "push": [Function],
                      "registerField": [Function],
                      "remove": [Function],
                      "removeBatch": [Function],
                      "renderForm": [Function],
                      "reset": [Function],
                      "resetFieldState": [Function],
                      "resumeValidation": [Function],
                      "setConfig": [Function],
                      "shift": [Function],
                      "submit": [Function],
                      "subscribe": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                      "update": [Function],
                      "valid": true,
                    }
                  }
                  inputAddon={
                    Object {
                      "after": Object {
                        "fields": Array [
                          Object {
                            "component": "button",
                            "label": "Set 3",
                            "name": "set3",
                          },
                        ],
                      },
                    }
                  }
                  label="Text Box With Input Addon"
                  name="text_box_21"
                  title="Text Box With Input Addon"
                  validate={[Function]}
                >
                  <ReactFinalForm(Field)
                    FieldArrayProvider={[Function]}
                    FieldProvider={[Function]}
                    formOptions={
                      Object {
                        "batch": [Function],
                        "blur": [Function],
                        "change": [Function],
                        "clearOnUnmount": false,
                        "clearedValue": undefined,
                        "concat": [Function],
                        "destroyOnUnregister": false,
                        "focus": [Function],
                        "getFieldState": [Function],
                        "getRegisteredFields": [Function],
                        "getState": [Function],
                        "handleSubmit": [Function],
                        "initialize": [Function],
                        "insert": [Function],
                        "isValidationPaused": [Function],
                        "move": [Function],
                        "onCancel": [Function],
                        "onSubmit": [MockFunction],
                        "pauseValidation": [Function],
                        "pop": [Function],
                        "pristine": true,
                        "push": [Function],
                        "registerField": [Function],
                        "remove": [Function],
                        "removeBatch": [Function],
                        "renderForm": [Function],
                        "reset": [Function],
                        "resetFieldState": [Function],
                        "resumeValidation": [Function],
                        "setConfig": [Function],
                        "shift": [Function],
                        "submit": [Function],
                        "subscribe": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                        "update": [Function],
                        "valid": true,
                      }
                    }
                    inputAddon={
                      Object {
                        "after": Object {
                          "fields": Array [
                            Object {
                              "component": "button",
                              "label": "Set 3",
                              "name": "set3",
                            },
                          ],
                        },
                      }
                    }
                    label="Text Box With Input Addon"
                    name="text_box_21"
                    render={[Function]}
                    title="Text Box With Input Addon"
                    validate={[Function]}
                  >
                    <Field
                      FieldArrayProvider={[Function]}
                      FieldProvider={[Function]}
                      formOptions={
                        Object {
                          "batch": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "clearOnUnmount": false,
                          "clearedValue": undefined,
                          "concat": [Function],
                          "destroyOnUnregister": false,
                          "focus": [Function],
                          "getFieldState": [Function],
                          "getRegisteredFields": [Function],
                          "getState": [Function],
                          "handleSubmit": [Function],
                          "initialize": [Function],
                          "insert": [Function],
                          "isValidationPaused": [Function],
                          "move": [Function],
                          "onCancel": [Function],
                          "onSubmit": [MockFunction],
                          "pauseValidation": [Function],
                          "pop": [Function],
                          "pristine": true,
                          "push": [Function],
                          "registerField": [Function],
                          "remove": [Function],
                          "removeBatch": [Function],
                          "renderForm": [Function],
                          "reset": [Function],
                          "resetFieldState": [Function],
                          "resumeValidation": [Function],
                          "setConfig": [Function],
                          "shift": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                          "update": [Function],
                          "valid": true,
                        }
                      }
                      format={[Function]}
                      inputAddon={
                        Object {
                          "after": Object {
                            "fields": Array [
                              Object {
                                "component": "button",
                                "label": "Set 3",
                                "name": "set3",
                              },
                            ],
                          },
                        }
                      }
                      label="Text Box With Input Addon"
                      name="text_box_21"
                      parse={[Function]}
                      reactFinalForm={
                        Object {
                          "batch": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "destroyOnUnregister": false,
                          "focus": [Function],
                          "getFieldState": [Function],
                          "getRegisteredFields": [Function],
                          "getState": [Function],
                          "initialize": [Function],
                          "isValidationPaused": [Function],
                          "mutators": Object {
                            "concat": [Function],
                            "insert": [Function],
                            "move": [Function],
                            "pop": [Function],
                            "push": [Function],
                            "remove": [Function],
                            "removeBatch": [Function],
                            "shift": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                            "update": [Function],
                          },
                          "pauseValidation": [Function],
                          "registerField": [Function],
                          "reset": [Function],
                          "resetFieldState": [Function],
                          "resumeValidation": [Function],
                          "setConfig": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                        }
                      }
                      render={[Function]}
                      title="Text Box With Input Addon"
                      validate={[Function]}
                    >
                      <TextField
                        FieldArrayProvider={[Function]}
                        FieldProvider={[Function]}
                        formOptions={
                          Object {
                            "batch": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearOnUnmount": false,
                            "clearedValue": undefined,
                            "concat": [Function],
                            "destroyOnUnregister": false,
                            "focus": [Function],
                            "getFieldState": [Function],
                            "getRegisteredFields": [Function],
                            "getState": [Function],
                            "handleSubmit": [Function],
                            "initialize": [Function],
                            "insert": [Function],
                            "isValidationPaused": [Function],
                            "move": [Function],
                            "onCancel": [Function],
                            "onSubmit": [MockFunction],
                            "pauseValidation": [Function],
                            "pop": [Function],
                            "pristine": true,
                            "push": [Function],
                            "registerField": [Function],
                            "remove": [Function],
                            "removeBatch": [Function],
                            "renderForm": [Function],
                            "reset": [Function],
                            "resetFieldState": [Function],
                            "resumeValidation": [Function],
                            "setConfig": [Function],
                            "shift": [Function],
                            "submit": [Function],
                            "subscribe": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                            "update": [Function],
                            "valid": true,
                          }
                        }
                        input={
                          Object {
                            "name": "text_box_21",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "",
                          }
                        }
                        inputAddon={
                          Object {
                            "after": Object {
                              "fields": Array [
                                Object {
                                  "component": "button",
                                  "label": "Set 3",
                                  "name": "set3",
                                },
                              ],
                            },
                          }
                        }
                        label="Text Box With Input Addon"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "modified": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        title="Text Box With Input Addon"
                      >
                        <FieldInterface
                          FieldArrayProvider={[Function]}
                          FieldProvider={[Function]}
                          componentType="text-field"
                          formOptions={
                            Object {
                              "batch": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearOnUnmount": false,
                              "clearedValue": undefined,
                              "concat": [Function],
                              "destroyOnUnregister": false,
                              "focus": [Function],
                              "getFieldState": [Function],
                              "getRegisteredFields": [Function],
                              "getState": [Function],
                              "handleSubmit": [Function],
                              "initialize": [Function],
                              "insert": [Function],
                              "isValidationPaused": [Function],
                              "move": [Function],
                              "onCancel": [Function],
                              "onSubmit": [MockFunction],
                              "pauseValidation": [Function],
                              "pop": [Function],
                              "pristine": true,
                              "push": [Function],
                              "registerField": [Function],
                              "remove": [Function],
                              "removeBatch": [Function],
                              "renderForm": [Function],
                              "reset": [Function],
                              "resetFieldState": [Function],
                              "resumeValidation": [Function],
                              "setConfig": [Function],
                              "shift": [Function],
                              "submit": [Function],
                              "subscribe": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                              "update": [Function],
                              "valid": true,
                            }
                          }
                          input={
                            Object {
                              "name": "text_box_21",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          inputAddon={
                            Object {
                              "after": Object {
                                "fields": Array [
                                  Object {
                                    "component": "button",
                                    "label": "Set 3",
                                    "name": "set3",
                                  },
                                ],
                              },
                            }
                          }
                          label="Text Box With Input Addon"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "modified": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          name="text_box_21"
                          title="Text Box With Input Addon"
                        >
                          <FormGroup
                            bsClass="form-group"
                            validationState={null}
                          >
                            <div
                              className="form-group"
                            >
                              <ControlLabel
                                bsClass="control-label"
                                srOnly={false}
                              >
                                <label
                                  className="control-label"
                                >
                                  Text Box With Input Addon
                                </label>
                              </ControlLabel>
                              <InputGroup
                                bsClass="input-group"
                              >
                                <span
                                  className="input-group"
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    componentClass="input"
                                    id="text_box_21"
                                    name="text_box_21"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    title="Text Box With Input Addon"
                                    value=""
                                  >
                                    <input
                                      className="form-control"
                                      id="text_box_21"
                                      name="text_box_21"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      title="Text Box With Input Addon"
                                      value=""
                                    />
                                  </FormControl>
                                  <FormConditionWrapper>
                                    <FormFieldHideWrapper
                                      hideField={false}
                                    >
                                      <FieldWrapper
                                        component={[Function]}
                                        componentType="button"
                                        formOptions={
                                          Object {
                                            "batch": [Function],
                                            "blur": [Function],
                                            "change": [Function],
                                            "clearOnUnmount": false,
                                            "clearedValue": undefined,
                                            "concat": [Function],
                                            "destroyOnUnregister": false,
                                            "focus": [Function],
                                            "getFieldState": [Function],
                                            "getRegisteredFields": [Function],
                                            "getState": [Function],
                                            "handleSubmit": [Function],
                                            "initialize": [Function],
                                            "insert": [Function],
                                            "isValidationPaused": [Function],
                                            "move": [Function],
                                            "onCancel": [Function],
                                            "onSubmit": [MockFunction],
                                            "pauseValidation": [Function],
                                            "pop": [Function],
                                            "pristine": true,
                                            "push": [Function],
                                            "registerField": [Function],
                                            "remove": [Function],
                                            "removeBatch": [Function],
                                            "renderForm": [Function],
                                            "reset": [Function],
                                            "resetFieldState": [Function],
                                            "resumeValidation": [Function],
                                            "setConfig": [Function],
                                            "shift": [Function],
                                            "submit": [Function],
                                            "subscribe": [Function],
                                            "swap": [Function],
                                            "unshift": [Function],
                                            "update": [Function],
                                            "valid": true,
                                          }
                                        }
                                        label="Set 3"
                                        name="set3"
                                        validate={
                                          Array [
                                            undefined,
                                          ]
                                        }
                                      >
                                        <Button
                                          FieldProvider={[Function]}
                                          FormSpyProvider={[Function]}
                                          className=""
                                          formOptions={
                                            Object {
                                              "batch": [Function],
                                              "blur": [Function],
                                              "change": [Function],
                                              "clearOnUnmount": false,
                                              "clearedValue": undefined,
                                              "concat": [Function],
                                              "destroyOnUnregister": false,
                                              "focus": [Function],
                                              "getFieldState": [Function],
                                              "getRegisteredFields": [Function],
                                              "getState": [Function],
                                              "handleSubmit": [Function],
                                              "initialize": [Function],
                                              "insert": [Function],
                                              "isValidationPaused": [Function],
                                              "move": [Function],
                                              "onCancel": [Function],
                                              "onSubmit": [MockFunction],
                                              "pauseValidation": [Function],
                                              "pop": [Function],
                                              "pristine": true,
                                              "push": [Function],
                                              "registerField": [Function],
                                              "remove": [Function],
                                              "removeBatch": [Function],
                                              "renderForm": [Function],
                                              "reset": [Function],
                                              "resetFieldState": [Function],
                                              "resumeValidation": [Function],
                                              "setConfig": [Function],
                                              "shift": [Function],
                                              "submit": [Function],
                                              "subscribe": [Function],
                                              "swap": [Function],
                                              "unshift": [Function],
                                              "update": [Function],
                                              "valid": true,
                                            }
                                          }
                                          label="Set 3"
                                          name="set3"
                                          validate={[Function]}
                                        >
                                          <Button
                                            FormSpyProvider={[Function]}
                                            active={false}
                                            block={false}
                                            bsClass="btn"
                                            bsStyle="default"
                                            className=""
                                            disabled={false}
                                            name="set3"
                                          >
                                            <button
                                              FormSpyProvider={[Function]}
                                              className="btn btn-default"
                                              disabled={false}
                                              name="set3"
                                              type="button"
                                            >
                                              Set 3
                                            </button>
                                          </Button>
                                        </Button>
                                      </FieldWrapper>
                                    </FormFieldHideWrapper>
                                  </FormConditionWrapper>
                                </span>
                              </InputGroup>
                            </div>
                          </FormGroup>
                        </FieldInterface>
                      </TextField>
                    </Field>
                  </ReactFinalForm(Field)>
                </FieldProvider>
              </FieldWrapper>
            </FormFieldHideWrapper>
          </FormConditionWrapper>
        </form>
      </Form>
    </FormWapper>
  </ReactFinalForm>
</FormRenderer>
`;

exports[`<Input Addon> should render single button before input addon correctly 1`] = `
<FormRenderer
  buttonClassName=""
  buttonsLabels={Object {}}
  clearOnUnmount={false}
  disableSubmit={Array []}
  formFieldsMapper={
    Object {
      "button": [Function],
      "checkbox": [Function],
      "date-picker": [Function],
      "input-addon-button-group": [Function],
      "input-addon-group": [Function],
      "plain-text": [Function],
      "radio": [Function],
      "select-field": [Function],
      "sub-form": [Function],
      "switch-field": [Function],
      "tabs": [Function],
      "text-field": [Function],
      "textarea-field": [Function],
      "time-picker": [Function],
      "wizard": [Function],
    }
  }
  initialValues={Object {}}
  layoutMapper={
    Object {
      "Button": [Function],
      "ButtonGroup": [Function],
      "Description": [Function],
      "FormWrapper": [Function],
      "Title": [Function],
    }
  }
  onCancel={[Function]}
  onSubmit={[MockFunction]}
  schema={
    Object {
      "fields": Array [
        Object {
          "component": "text-field",
          "inputAddon": Object {
            "before": Object {
              "fields": Array [
                Object {
                  "component": "input-addon-button-group",
                  "fields": Array [
                    Object {
                      "component": "button",
                      "label": "Set 2",
                      "name": "set2",
                    },
                  ],
                  "name": "i-a-g-2",
                },
              ],
            },
          },
          "label": "Text Box With Input Addon",
          "name": "text_box_21",
          "title": "Text Box With Input Addon",
        },
      ],
    }
  }
  showFormControls={false}
>
  <ReactFinalForm
    decorators={
      Array [
        [Function],
      ]
    }
    initialValues={Object {}}
    mutators={
      Object {
        "concat": [Function],
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "removeBatch": [Function],
        "shift": [Function],
        "swap": [Function],
        "unshift": [Function],
        "update": [Function],
      }
    }
    onSubmit={[MockFunction]}
    render={[Function]}
    subscription={
      Object {
        "pristine": true,
        "submitting": true,
        "valid": true,
      }
    }
  >
    <FormWapper
      onSubmit={[Function]}
    >
      <Form
        bsClass="form"
        componentClass="form"
        horizontal={false}
        inline={false}
        onSubmit={[Function]}
      >
        <form
          className=""
          onSubmit={[Function]}
        >
          <FormConditionWrapper>
            <FormFieldHideWrapper
              hideField={false}
            >
              <FieldWrapper
                component={[Function]}
                componentType="text-field"
                formOptions={
                  Object {
                    "batch": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearOnUnmount": false,
                    "clearedValue": undefined,
                    "concat": [Function],
                    "destroyOnUnregister": false,
                    "focus": [Function],
                    "getFieldState": [Function],
                    "getRegisteredFields": [Function],
                    "getState": [Function],
                    "handleSubmit": [Function],
                    "initialize": [Function],
                    "insert": [Function],
                    "isValidationPaused": [Function],
                    "move": [Function],
                    "onCancel": [Function],
                    "onSubmit": [MockFunction],
                    "pauseValidation": [Function],
                    "pop": [Function],
                    "pristine": true,
                    "push": [Function],
                    "registerField": [Function],
                    "remove": [Function],
                    "removeBatch": [Function],
                    "renderForm": [Function],
                    "reset": [Function],
                    "resetFieldState": [Function],
                    "resumeValidation": [Function],
                    "setConfig": [Function],
                    "shift": [Function],
                    "submit": [Function],
                    "subscribe": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                    "update": [Function],
                    "valid": true,
                  }
                }
                inputAddon={
                  Object {
                    "before": Object {
                      "fields": Array [
                        Object {
                          "component": "input-addon-button-group",
                          "fields": Array [
                            Object {
                              "component": "button",
                              "label": "Set 2",
                              "name": "set2",
                            },
                          ],
                          "name": "i-a-g-2",
                        },
                      ],
                    },
                  }
                }
                label="Text Box With Input Addon"
                name="text_box_21"
                title="Text Box With Input Addon"
                validate={
                  Array [
                    undefined,
                  ]
                }
              >
                <FieldProvider
                  FieldArrayProvider={[Function]}
                  FieldProvider={[Function]}
                  component={[Function]}
                  formOptions={
                    Object {
                      "batch": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearOnUnmount": false,
                      "clearedValue": undefined,
                      "concat": [Function],
                      "destroyOnUnregister": false,
                      "focus": [Function],
                      "getFieldState": [Function],
                      "getRegisteredFields": [Function],
                      "getState": [Function],
                      "handleSubmit": [Function],
                      "initialize": [Function],
                      "insert": [Function],
                      "isValidationPaused": [Function],
                      "move": [Function],
                      "onCancel": [Function],
                      "onSubmit": [MockFunction],
                      "pauseValidation": [Function],
                      "pop": [Function],
                      "pristine": true,
                      "push": [Function],
                      "registerField": [Function],
                      "remove": [Function],
                      "removeBatch": [Function],
                      "renderForm": [Function],
                      "reset": [Function],
                      "resetFieldState": [Function],
                      "resumeValidation": [Function],
                      "setConfig": [Function],
                      "shift": [Function],
                      "submit": [Function],
                      "subscribe": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                      "update": [Function],
                      "valid": true,
                    }
                  }
                  inputAddon={
                    Object {
                      "before": Object {
                        "fields": Array [
                          Object {
                            "component": "input-addon-button-group",
                            "fields": Array [
                              Object {
                                "component": "button",
                                "label": "Set 2",
                                "name": "set2",
                              },
                            ],
                            "name": "i-a-g-2",
                          },
                        ],
                      },
                    }
                  }
                  label="Text Box With Input Addon"
                  name="text_box_21"
                  title="Text Box With Input Addon"
                  validate={[Function]}
                >
                  <ReactFinalForm(Field)
                    FieldArrayProvider={[Function]}
                    FieldProvider={[Function]}
                    formOptions={
                      Object {
                        "batch": [Function],
                        "blur": [Function],
                        "change": [Function],
                        "clearOnUnmount": false,
                        "clearedValue": undefined,
                        "concat": [Function],
                        "destroyOnUnregister": false,
                        "focus": [Function],
                        "getFieldState": [Function],
                        "getRegisteredFields": [Function],
                        "getState": [Function],
                        "handleSubmit": [Function],
                        "initialize": [Function],
                        "insert": [Function],
                        "isValidationPaused": [Function],
                        "move": [Function],
                        "onCancel": [Function],
                        "onSubmit": [MockFunction],
                        "pauseValidation": [Function],
                        "pop": [Function],
                        "pristine": true,
                        "push": [Function],
                        "registerField": [Function],
                        "remove": [Function],
                        "removeBatch": [Function],
                        "renderForm": [Function],
                        "reset": [Function],
                        "resetFieldState": [Function],
                        "resumeValidation": [Function],
                        "setConfig": [Function],
                        "shift": [Function],
                        "submit": [Function],
                        "subscribe": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                        "update": [Function],
                        "valid": true,
                      }
                    }
                    inputAddon={
                      Object {
                        "before": Object {
                          "fields": Array [
                            Object {
                              "component": "input-addon-button-group",
                              "fields": Array [
                                Object {
                                  "component": "button",
                                  "label": "Set 2",
                                  "name": "set2",
                                },
                              ],
                              "name": "i-a-g-2",
                            },
                          ],
                        },
                      }
                    }
                    label="Text Box With Input Addon"
                    name="text_box_21"
                    render={[Function]}
                    title="Text Box With Input Addon"
                    validate={[Function]}
                  >
                    <Field
                      FieldArrayProvider={[Function]}
                      FieldProvider={[Function]}
                      formOptions={
                        Object {
                          "batch": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "clearOnUnmount": false,
                          "clearedValue": undefined,
                          "concat": [Function],
                          "destroyOnUnregister": false,
                          "focus": [Function],
                          "getFieldState": [Function],
                          "getRegisteredFields": [Function],
                          "getState": [Function],
                          "handleSubmit": [Function],
                          "initialize": [Function],
                          "insert": [Function],
                          "isValidationPaused": [Function],
                          "move": [Function],
                          "onCancel": [Function],
                          "onSubmit": [MockFunction],
                          "pauseValidation": [Function],
                          "pop": [Function],
                          "pristine": true,
                          "push": [Function],
                          "registerField": [Function],
                          "remove": [Function],
                          "removeBatch": [Function],
                          "renderForm": [Function],
                          "reset": [Function],
                          "resetFieldState": [Function],
                          "resumeValidation": [Function],
                          "setConfig": [Function],
                          "shift": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                          "update": [Function],
                          "valid": true,
                        }
                      }
                      format={[Function]}
                      inputAddon={
                        Object {
                          "before": Object {
                            "fields": Array [
                              Object {
                                "component": "input-addon-button-group",
                                "fields": Array [
                                  Object {
                                    "component": "button",
                                    "label": "Set 2",
                                    "name": "set2",
                                  },
                                ],
                                "name": "i-a-g-2",
                              },
                            ],
                          },
                        }
                      }
                      label="Text Box With Input Addon"
                      name="text_box_21"
                      parse={[Function]}
                      reactFinalForm={
                        Object {
                          "batch": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "destroyOnUnregister": false,
                          "focus": [Function],
                          "getFieldState": [Function],
                          "getRegisteredFields": [Function],
                          "getState": [Function],
                          "initialize": [Function],
                          "isValidationPaused": [Function],
                          "mutators": Object {
                            "concat": [Function],
                            "insert": [Function],
                            "move": [Function],
                            "pop": [Function],
                            "push": [Function],
                            "remove": [Function],
                            "removeBatch": [Function],
                            "shift": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                            "update": [Function],
                          },
                          "pauseValidation": [Function],
                          "registerField": [Function],
                          "reset": [Function],
                          "resetFieldState": [Function],
                          "resumeValidation": [Function],
                          "setConfig": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                        }
                      }
                      render={[Function]}
                      title="Text Box With Input Addon"
                      validate={[Function]}
                    >
                      <TextField
                        FieldArrayProvider={[Function]}
                        FieldProvider={[Function]}
                        formOptions={
                          Object {
                            "batch": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearOnUnmount": false,
                            "clearedValue": undefined,
                            "concat": [Function],
                            "destroyOnUnregister": false,
                            "focus": [Function],
                            "getFieldState": [Function],
                            "getRegisteredFields": [Function],
                            "getState": [Function],
                            "handleSubmit": [Function],
                            "initialize": [Function],
                            "insert": [Function],
                            "isValidationPaused": [Function],
                            "move": [Function],
                            "onCancel": [Function],
                            "onSubmit": [MockFunction],
                            "pauseValidation": [Function],
                            "pop": [Function],
                            "pristine": true,
                            "push": [Function],
                            "registerField": [Function],
                            "remove": [Function],
                            "removeBatch": [Function],
                            "renderForm": [Function],
                            "reset": [Function],
                            "resetFieldState": [Function],
                            "resumeValidation": [Function],
                            "setConfig": [Function],
                            "shift": [Function],
                            "submit": [Function],
                            "subscribe": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                            "update": [Function],
                            "valid": true,
                          }
                        }
                        input={
                          Object {
                            "name": "text_box_21",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "",
                          }
                        }
                        inputAddon={
                          Object {
                            "before": Object {
                              "fields": Array [
                                Object {
                                  "component": "input-addon-button-group",
                                  "fields": Array [
                                    Object {
                                      "component": "button",
                                      "label": "Set 2",
                                      "name": "set2",
                                    },
                                  ],
                                  "name": "i-a-g-2",
                                },
                              ],
                            },
                          }
                        }
                        label="Text Box With Input Addon"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "modified": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        title="Text Box With Input Addon"
                      >
                        <FieldInterface
                          FieldArrayProvider={[Function]}
                          FieldProvider={[Function]}
                          componentType="text-field"
                          formOptions={
                            Object {
                              "batch": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearOnUnmount": false,
                              "clearedValue": undefined,
                              "concat": [Function],
                              "destroyOnUnregister": false,
                              "focus": [Function],
                              "getFieldState": [Function],
                              "getRegisteredFields": [Function],
                              "getState": [Function],
                              "handleSubmit": [Function],
                              "initialize": [Function],
                              "insert": [Function],
                              "isValidationPaused": [Function],
                              "move": [Function],
                              "onCancel": [Function],
                              "onSubmit": [MockFunction],
                              "pauseValidation": [Function],
                              "pop": [Function],
                              "pristine": true,
                              "push": [Function],
                              "registerField": [Function],
                              "remove": [Function],
                              "removeBatch": [Function],
                              "renderForm": [Function],
                              "reset": [Function],
                              "resetFieldState": [Function],
                              "resumeValidation": [Function],
                              "setConfig": [Function],
                              "shift": [Function],
                              "submit": [Function],
                              "subscribe": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                              "update": [Function],
                              "valid": true,
                            }
                          }
                          input={
                            Object {
                              "name": "text_box_21",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          inputAddon={
                            Object {
                              "before": Object {
                                "fields": Array [
                                  Object {
                                    "component": "input-addon-button-group",
                                    "fields": Array [
                                      Object {
                                        "component": "button",
                                        "label": "Set 2",
                                        "name": "set2",
                                      },
                                    ],
                                    "name": "i-a-g-2",
                                  },
                                ],
                              },
                            }
                          }
                          label="Text Box With Input Addon"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "modified": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          name="text_box_21"
                          title="Text Box With Input Addon"
                        >
                          <FormGroup
                            bsClass="form-group"
                            validationState={null}
                          >
                            <div
                              className="form-group"
                            >
                              <ControlLabel
                                bsClass="control-label"
                                srOnly={false}
                              >
                                <label
                                  className="control-label"
                                >
                                  Text Box With Input Addon
                                </label>
                              </ControlLabel>
                              <InputGroup
                                bsClass="input-group"
                              >
                                <span
                                  className="input-group"
                                >
                                  <FormConditionWrapper>
                                    <FormFieldHideWrapper
                                      hideField={false}
                                    >
                                      <FieldWrapper
                                        component={[Function]}
                                        componentType="input-addon-button-group"
                                        fields={
                                          Array [
                                            Object {
                                              "component": "button",
                                              "label": "Set 2",
                                              "name": "set2",
                                            },
                                          ]
                                        }
                                        formOptions={
                                          Object {
                                            "batch": [Function],
                                            "blur": [Function],
                                            "change": [Function],
                                            "clearOnUnmount": false,
                                            "clearedValue": undefined,
                                            "concat": [Function],
                                            "destroyOnUnregister": false,
                                            "focus": [Function],
                                            "getFieldState": [Function],
                                            "getRegisteredFields": [Function],
                                            "getState": [Function],
                                            "handleSubmit": [Function],
                                            "initialize": [Function],
                                            "insert": [Function],
                                            "isValidationPaused": [Function],
                                            "move": [Function],
                                            "onCancel": [Function],
                                            "onSubmit": [MockFunction],
                                            "pauseValidation": [Function],
                                            "pop": [Function],
                                            "pristine": true,
                                            "push": [Function],
                                            "registerField": [Function],
                                            "remove": [Function],
                                            "removeBatch": [Function],
                                            "renderForm": [Function],
                                            "reset": [Function],
                                            "resetFieldState": [Function],
                                            "resumeValidation": [Function],
                                            "setConfig": [Function],
                                            "shift": [Function],
                                            "submit": [Function],
                                            "subscribe": [Function],
                                            "swap": [Function],
                                            "unshift": [Function],
                                            "update": [Function],
                                            "valid": true,
                                          }
                                        }
                                        name="i-a-g-2"
                                        validate={
                                          Array [
                                            undefined,
                                          ]
                                        }
                                      >
                                        <InputAddonButtonGroup
                                          FieldProvider={[Function]}
                                          FormSpyProvider={[Function]}
                                          fields={
                                            Array [
                                              Object {
                                                "component": "button",
                                                "label": "Set 2",
                                                "name": "set2",
                                              },
                                            ]
                                          }
                                          formOptions={
                                            Object {
                                              "batch": [Function],
                                              "blur": [Function],
                                              "change": [Function],
                                              "clearOnUnmount": false,
                                              "clearedValue": undefined,
                                              "concat": [Function],
                                              "destroyOnUnregister": false,
                                              "focus": [Function],
                                              "getFieldState": [Function],
                                              "getRegisteredFields": [Function],
                                              "getState": [Function],
                                              "handleSubmit": [Function],
                                              "initialize": [Function],
                                              "insert": [Function],
                                              "isValidationPaused": [Function],
                                              "move": [Function],
                                              "onCancel": [Function],
                                              "onSubmit": [MockFunction],
                                              "pauseValidation": [Function],
                                              "pop": [Function],
                                              "pristine": true,
                                              "push": [Function],
                                              "registerField": [Function],
                                              "remove": [Function],
                                              "removeBatch": [Function],
                                              "renderForm": [Function],
                                              "reset": [Function],
                                              "resetFieldState": [Function],
                                              "resumeValidation": [Function],
                                              "setConfig": [Function],
                                              "shift": [Function],
                                              "submit": [Function],
                                              "subscribe": [Function],
                                              "swap": [Function],
                                              "unshift": [Function],
                                              "update": [Function],
                                              "valid": true,
                                            }
                                          }
                                          name="i-a-g-2"
                                          validate={[Function]}
                                        >
                                          <InputGroupButton
                                            bsClass="input-group-btn"
                                          >
                                            <span
                                              className="input-group-btn"
                                            >
                                              <FormConditionWrapper>
                                                <FormFieldHideWrapper
                                                  hideField={false}
                                                >
                                                  <FieldWrapper
                                                    component={[Function]}
                                                    componentType="button"
                                                    formOptions={
                                                      Object {
                                                        "batch": [Function],
                                                        "blur": [Function],
                                                        "change": [Function],
                                                        "clearOnUnmount": false,
                                                        "clearedValue": undefined,
                                                        "concat": [Function],
                                                        "destroyOnUnregister": false,
                                                        "focus": [Function],
                                                        "getFieldState": [Function],
                                                        "getRegisteredFields": [Function],
                                                        "getState": [Function],
                                                        "handleSubmit": [Function],
                                                        "initialize": [Function],
                                                        "insert": [Function],
                                                        "isValidationPaused": [Function],
                                                        "move": [Function],
                                                        "onCancel": [Function],
                                                        "onSubmit": [MockFunction],
                                                        "pauseValidation": [Function],
                                                        "pop": [Function],
                                                        "pristine": true,
                                                        "push": [Function],
                                                        "registerField": [Function],
                                                        "remove": [Function],
                                                        "removeBatch": [Function],
                                                        "renderForm": [Function],
                                                        "reset": [Function],
                                                        "resetFieldState": [Function],
                                                        "resumeValidation": [Function],
                                                        "setConfig": [Function],
                                                        "shift": [Function],
                                                        "submit": [Function],
                                                        "subscribe": [Function],
                                                        "swap": [Function],
                                                        "unshift": [Function],
                                                        "update": [Function],
                                                        "valid": true,
                                                      }
                                                    }
                                                    label="Set 2"
                                                    name="set2"
                                                    validate={
                                                      Array [
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <Button
                                                      FieldProvider={[Function]}
                                                      FormSpyProvider={[Function]}
                                                      className=""
                                                      formOptions={
                                                        Object {
                                                          "batch": [Function],
                                                          "blur": [Function],
                                                          "change": [Function],
                                                          "clearOnUnmount": false,
                                                          "clearedValue": undefined,
                                                          "concat": [Function],
                                                          "destroyOnUnregister": false,
                                                          "focus": [Function],
                                                          "getFieldState": [Function],
                                                          "getRegisteredFields": [Function],
                                                          "getState": [Function],
                                                          "handleSubmit": [Function],
                                                          "initialize": [Function],
                                                          "insert": [Function],
                                                          "isValidationPaused": [Function],
                                                          "move": [Function],
                                                          "onCancel": [Function],
                                                          "onSubmit": [MockFunction],
                                                          "pauseValidation": [Function],
                                                          "pop": [Function],
                                                          "pristine": true,
                                                          "push": [Function],
                                                          "registerField": [Function],
                                                          "remove": [Function],
                                                          "removeBatch": [Function],
                                                          "renderForm": [Function],
                                                          "reset": [Function],
                                                          "resetFieldState": [Function],
                                                          "resumeValidation": [Function],
                                                          "setConfig": [Function],
                                                          "shift": [Function],
                                                          "submit": [Function],
                                                          "subscribe": [Function],
                                                          "swap": [Function],
                                                          "unshift": [Function],
                                                          "update": [Function],
                                                          "valid": true,
                                                        }
                                                      }
                                                      label="Set 2"
                                                      name="set2"
                                                      validate={[Function]}
                                                    >
                                                      <Button
                                                        FormSpyProvider={[Function]}
                                                        active={false}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsStyle="default"
                                                        className=""
                                                        disabled={false}
                                                        name="set2"
                                                      >
                                                        <button
                                                          FormSpyProvider={[Function]}
                                                          className="btn btn-default"
                                                          disabled={false}
                                                          name="set2"
                                                          type="button"
                                                        >
                                                          Set 2
                                                        </button>
                                                      </Button>
                                                    </Button>
                                                  </FieldWrapper>
                                                </FormFieldHideWrapper>
                                              </FormConditionWrapper>
                                            </span>
                                          </InputGroupButton>
                                        </InputAddonButtonGroup>
                                      </FieldWrapper>
                                    </FormFieldHideWrapper>
                                  </FormConditionWrapper>
                                  <FormControl
                                    bsClass="form-control"
                                    componentClass="input"
                                    id="text_box_21"
                                    name="text_box_21"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    title="Text Box With Input Addon"
                                    value=""
                                  >
                                    <input
                                      className="form-control"
                                      id="text_box_21"
                                      name="text_box_21"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      title="Text Box With Input Addon"
                                      value=""
                                    />
                                  </FormControl>
                                </span>
                              </InputGroup>
                            </div>
                          </FormGroup>
                        </FieldInterface>
                      </TextField>
                    </Field>
                  </ReactFinalForm(Field)>
                </FieldProvider>
              </FieldWrapper>
            </FormFieldHideWrapper>
          </FormConditionWrapper>
        </form>
      </Form>
    </FormWapper>
  </ReactFinalForm>
</FormRenderer>
`;

exports[`<Input Addon> should render the ultimate input addon correctly 1`] = `
<FormRenderer
  buttonClassName=""
  buttonsLabels={Object {}}
  clearOnUnmount={false}
  disableSubmit={Array []}
  formFieldsMapper={
    Object {
      "button": [Function],
      "checkbox": [Function],
      "date-picker": [Function],
      "input-addon-button-group": [Function],
      "input-addon-group": [Function],
      "plain-text": [Function],
      "radio": [Function],
      "select-field": [Function],
      "sub-form": [Function],
      "switch-field": [Function],
      "tabs": [Function],
      "text-field": [Function],
      "textarea-field": [Function],
      "time-picker": [Function],
      "wizard": [Function],
    }
  }
  initialValues={Object {}}
  layoutMapper={
    Object {
      "Button": [Function],
      "ButtonGroup": [Function],
      "Description": [Function],
      "FormWrapper": [Function],
      "Title": [Function],
    }
  }
  onCancel={[Function]}
  onSubmit={[MockFunction]}
  schema={
    Object {
      "fields": Array [
        Object {
          "component": "text-field",
          "inputAddon": Object {
            "after": Object {
              "fields": Array [
                Object {
                  "component": "input-addon-group",
                  "fields": Array [
                    Object {
                      "component": "plain-text",
                      "label": "-",
                      "name": "name1",
                      "variant": "span",
                    },
                  ],
                  "name": "i-a-g-2",
                },
                Object {
                  "component": "input-addon-button-group",
                  "fields": Array [
                    Object {
                      "component": "button",
                      "label": "Set 3",
                      "name": "set3",
                    },
                  ],
                  "name": "i-a-g-3",
                },
              ],
            },
            "before": Object {
              "fields": Array [
                Object {
                  "component": "input-addon-button-group",
                  "fields": Array [
                    Object {
                      "component": "button",
                      "label": "Set 1",
                      "name": "set1",
                      "onClick": [Function],
                    },
                    Object {
                      "component": "button",
                      "label": "Set 2",
                      "name": "set2",
                    },
                  ],
                  "name": "i-a-g-2",
                },
              ],
            },
          },
          "label": "Text Box With Input Addon",
          "name": "text_box_21",
          "title": "Text Box With Input Addon",
        },
      ],
    }
  }
  showFormControls={false}
>
  <ReactFinalForm
    decorators={
      Array [
        [Function],
      ]
    }
    initialValues={Object {}}
    mutators={
      Object {
        "concat": [Function],
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "removeBatch": [Function],
        "shift": [Function],
        "swap": [Function],
        "unshift": [Function],
        "update": [Function],
      }
    }
    onSubmit={[MockFunction]}
    render={[Function]}
    subscription={
      Object {
        "pristine": true,
        "submitting": true,
        "valid": true,
      }
    }
  >
    <FormWapper
      onSubmit={[Function]}
    >
      <Form
        bsClass="form"
        componentClass="form"
        horizontal={false}
        inline={false}
        onSubmit={[Function]}
      >
        <form
          className=""
          onSubmit={[Function]}
        >
          <FormConditionWrapper>
            <FormFieldHideWrapper
              hideField={false}
            >
              <FieldWrapper
                component={[Function]}
                componentType="text-field"
                formOptions={
                  Object {
                    "batch": [Function],
                    "blur": [Function],
                    "change": [Function],
                    "clearOnUnmount": false,
                    "clearedValue": undefined,
                    "concat": [Function],
                    "destroyOnUnregister": false,
                    "focus": [Function],
                    "getFieldState": [Function],
                    "getRegisteredFields": [Function],
                    "getState": [Function],
                    "handleSubmit": [Function],
                    "initialize": [Function],
                    "insert": [Function],
                    "isValidationPaused": [Function],
                    "move": [Function],
                    "onCancel": [Function],
                    "onSubmit": [MockFunction],
                    "pauseValidation": [Function],
                    "pop": [Function],
                    "pristine": true,
                    "push": [Function],
                    "registerField": [Function],
                    "remove": [Function],
                    "removeBatch": [Function],
                    "renderForm": [Function],
                    "reset": [Function],
                    "resetFieldState": [Function],
                    "resumeValidation": [Function],
                    "setConfig": [Function],
                    "shift": [Function],
                    "submit": [Function],
                    "subscribe": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                    "update": [Function],
                    "valid": true,
                  }
                }
                inputAddon={
                  Object {
                    "after": Object {
                      "fields": Array [
                        Object {
                          "component": "input-addon-group",
                          "fields": Array [
                            Object {
                              "component": "plain-text",
                              "label": "-",
                              "name": "name1",
                              "variant": "span",
                            },
                          ],
                          "name": "i-a-g-2",
                        },
                        Object {
                          "component": "input-addon-button-group",
                          "fields": Array [
                            Object {
                              "component": "button",
                              "label": "Set 3",
                              "name": "set3",
                            },
                          ],
                          "name": "i-a-g-3",
                        },
                      ],
                    },
                    "before": Object {
                      "fields": Array [
                        Object {
                          "component": "input-addon-button-group",
                          "fields": Array [
                            Object {
                              "component": "button",
                              "label": "Set 1",
                              "name": "set1",
                              "onClick": [Function],
                            },
                            Object {
                              "component": "button",
                              "label": "Set 2",
                              "name": "set2",
                            },
                          ],
                          "name": "i-a-g-2",
                        },
                      ],
                    },
                  }
                }
                label="Text Box With Input Addon"
                name="text_box_21"
                title="Text Box With Input Addon"
                validate={
                  Array [
                    undefined,
                  ]
                }
              >
                <FieldProvider
                  FieldArrayProvider={[Function]}
                  FieldProvider={[Function]}
                  component={[Function]}
                  formOptions={
                    Object {
                      "batch": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "clearOnUnmount": false,
                      "clearedValue": undefined,
                      "concat": [Function],
                      "destroyOnUnregister": false,
                      "focus": [Function],
                      "getFieldState": [Function],
                      "getRegisteredFields": [Function],
                      "getState": [Function],
                      "handleSubmit": [Function],
                      "initialize": [Function],
                      "insert": [Function],
                      "isValidationPaused": [Function],
                      "move": [Function],
                      "onCancel": [Function],
                      "onSubmit": [MockFunction],
                      "pauseValidation": [Function],
                      "pop": [Function],
                      "pristine": true,
                      "push": [Function],
                      "registerField": [Function],
                      "remove": [Function],
                      "removeBatch": [Function],
                      "renderForm": [Function],
                      "reset": [Function],
                      "resetFieldState": [Function],
                      "resumeValidation": [Function],
                      "setConfig": [Function],
                      "shift": [Function],
                      "submit": [Function],
                      "subscribe": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                      "update": [Function],
                      "valid": true,
                    }
                  }
                  inputAddon={
                    Object {
                      "after": Object {
                        "fields": Array [
                          Object {
                            "component": "input-addon-group",
                            "fields": Array [
                              Object {
                                "component": "plain-text",
                                "label": "-",
                                "name": "name1",
                                "variant": "span",
                              },
                            ],
                            "name": "i-a-g-2",
                          },
                          Object {
                            "component": "input-addon-button-group",
                            "fields": Array [
                              Object {
                                "component": "button",
                                "label": "Set 3",
                                "name": "set3",
                              },
                            ],
                            "name": "i-a-g-3",
                          },
                        ],
                      },
                      "before": Object {
                        "fields": Array [
                          Object {
                            "component": "input-addon-button-group",
                            "fields": Array [
                              Object {
                                "component": "button",
                                "label": "Set 1",
                                "name": "set1",
                                "onClick": [Function],
                              },
                              Object {
                                "component": "button",
                                "label": "Set 2",
                                "name": "set2",
                              },
                            ],
                            "name": "i-a-g-2",
                          },
                        ],
                      },
                    }
                  }
                  label="Text Box With Input Addon"
                  name="text_box_21"
                  title="Text Box With Input Addon"
                  validate={[Function]}
                >
                  <ReactFinalForm(Field)
                    FieldArrayProvider={[Function]}
                    FieldProvider={[Function]}
                    formOptions={
                      Object {
                        "batch": [Function],
                        "blur": [Function],
                        "change": [Function],
                        "clearOnUnmount": false,
                        "clearedValue": undefined,
                        "concat": [Function],
                        "destroyOnUnregister": false,
                        "focus": [Function],
                        "getFieldState": [Function],
                        "getRegisteredFields": [Function],
                        "getState": [Function],
                        "handleSubmit": [Function],
                        "initialize": [Function],
                        "insert": [Function],
                        "isValidationPaused": [Function],
                        "move": [Function],
                        "onCancel": [Function],
                        "onSubmit": [MockFunction],
                        "pauseValidation": [Function],
                        "pop": [Function],
                        "pristine": true,
                        "push": [Function],
                        "registerField": [Function],
                        "remove": [Function],
                        "removeBatch": [Function],
                        "renderForm": [Function],
                        "reset": [Function],
                        "resetFieldState": [Function],
                        "resumeValidation": [Function],
                        "setConfig": [Function],
                        "shift": [Function],
                        "submit": [Function],
                        "subscribe": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                        "update": [Function],
                        "valid": true,
                      }
                    }
                    inputAddon={
                      Object {
                        "after": Object {
                          "fields": Array [
                            Object {
                              "component": "input-addon-group",
                              "fields": Array [
                                Object {
                                  "component": "plain-text",
                                  "label": "-",
                                  "name": "name1",
                                  "variant": "span",
                                },
                              ],
                              "name": "i-a-g-2",
                            },
                            Object {
                              "component": "input-addon-button-group",
                              "fields": Array [
                                Object {
                                  "component": "button",
                                  "label": "Set 3",
                                  "name": "set3",
                                },
                              ],
                              "name": "i-a-g-3",
                            },
                          ],
                        },
                        "before": Object {
                          "fields": Array [
                            Object {
                              "component": "input-addon-button-group",
                              "fields": Array [
                                Object {
                                  "component": "button",
                                  "label": "Set 1",
                                  "name": "set1",
                                  "onClick": [Function],
                                },
                                Object {
                                  "component": "button",
                                  "label": "Set 2",
                                  "name": "set2",
                                },
                              ],
                              "name": "i-a-g-2",
                            },
                          ],
                        },
                      }
                    }
                    label="Text Box With Input Addon"
                    name="text_box_21"
                    render={[Function]}
                    title="Text Box With Input Addon"
                    validate={[Function]}
                  >
                    <Field
                      FieldArrayProvider={[Function]}
                      FieldProvider={[Function]}
                      formOptions={
                        Object {
                          "batch": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "clearOnUnmount": false,
                          "clearedValue": undefined,
                          "concat": [Function],
                          "destroyOnUnregister": false,
                          "focus": [Function],
                          "getFieldState": [Function],
                          "getRegisteredFields": [Function],
                          "getState": [Function],
                          "handleSubmit": [Function],
                          "initialize": [Function],
                          "insert": [Function],
                          "isValidationPaused": [Function],
                          "move": [Function],
                          "onCancel": [Function],
                          "onSubmit": [MockFunction],
                          "pauseValidation": [Function],
                          "pop": [Function],
                          "pristine": true,
                          "push": [Function],
                          "registerField": [Function],
                          "remove": [Function],
                          "removeBatch": [Function],
                          "renderForm": [Function],
                          "reset": [Function],
                          "resetFieldState": [Function],
                          "resumeValidation": [Function],
                          "setConfig": [Function],
                          "shift": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                          "update": [Function],
                          "valid": true,
                        }
                      }
                      format={[Function]}
                      inputAddon={
                        Object {
                          "after": Object {
                            "fields": Array [
                              Object {
                                "component": "input-addon-group",
                                "fields": Array [
                                  Object {
                                    "component": "plain-text",
                                    "label": "-",
                                    "name": "name1",
                                    "variant": "span",
                                  },
                                ],
                                "name": "i-a-g-2",
                              },
                              Object {
                                "component": "input-addon-button-group",
                                "fields": Array [
                                  Object {
                                    "component": "button",
                                    "label": "Set 3",
                                    "name": "set3",
                                  },
                                ],
                                "name": "i-a-g-3",
                              },
                            ],
                          },
                          "before": Object {
                            "fields": Array [
                              Object {
                                "component": "input-addon-button-group",
                                "fields": Array [
                                  Object {
                                    "component": "button",
                                    "label": "Set 1",
                                    "name": "set1",
                                    "onClick": [Function],
                                  },
                                  Object {
                                    "component": "button",
                                    "label": "Set 2",
                                    "name": "set2",
                                  },
                                ],
                                "name": "i-a-g-2",
                              },
                            ],
                          },
                        }
                      }
                      label="Text Box With Input Addon"
                      name="text_box_21"
                      parse={[Function]}
                      reactFinalForm={
                        Object {
                          "batch": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "destroyOnUnregister": false,
                          "focus": [Function],
                          "getFieldState": [Function],
                          "getRegisteredFields": [Function],
                          "getState": [Function],
                          "initialize": [Function],
                          "isValidationPaused": [Function],
                          "mutators": Object {
                            "concat": [Function],
                            "insert": [Function],
                            "move": [Function],
                            "pop": [Function],
                            "push": [Function],
                            "remove": [Function],
                            "removeBatch": [Function],
                            "shift": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                            "update": [Function],
                          },
                          "pauseValidation": [Function],
                          "registerField": [Function],
                          "reset": [Function],
                          "resetFieldState": [Function],
                          "resumeValidation": [Function],
                          "setConfig": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                        }
                      }
                      render={[Function]}
                      title="Text Box With Input Addon"
                      validate={[Function]}
                    >
                      <TextField
                        FieldArrayProvider={[Function]}
                        FieldProvider={[Function]}
                        formOptions={
                          Object {
                            "batch": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearOnUnmount": false,
                            "clearedValue": undefined,
                            "concat": [Function],
                            "destroyOnUnregister": false,
                            "focus": [Function],
                            "getFieldState": [Function],
                            "getRegisteredFields": [Function],
                            "getState": [Function],
                            "handleSubmit": [Function],
                            "initialize": [Function],
                            "insert": [Function],
                            "isValidationPaused": [Function],
                            "move": [Function],
                            "onCancel": [Function],
                            "onSubmit": [MockFunction],
                            "pauseValidation": [Function],
                            "pop": [Function],
                            "pristine": true,
                            "push": [Function],
                            "registerField": [Function],
                            "remove": [Function],
                            "removeBatch": [Function],
                            "renderForm": [Function],
                            "reset": [Function],
                            "resetFieldState": [Function],
                            "resumeValidation": [Function],
                            "setConfig": [Function],
                            "shift": [Function],
                            "submit": [Function],
                            "subscribe": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                            "update": [Function],
                            "valid": true,
                          }
                        }
                        input={
                          Object {
                            "name": "text_box_21",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "",
                          }
                        }
                        inputAddon={
                          Object {
                            "after": Object {
                              "fields": Array [
                                Object {
                                  "component": "input-addon-group",
                                  "fields": Array [
                                    Object {
                                      "component": "plain-text",
                                      "label": "-",
                                      "name": "name1",
                                      "variant": "span",
                                    },
                                  ],
                                  "name": "i-a-g-2",
                                },
                                Object {
                                  "component": "input-addon-button-group",
                                  "fields": Array [
                                    Object {
                                      "component": "button",
                                      "label": "Set 3",
                                      "name": "set3",
                                    },
                                  ],
                                  "name": "i-a-g-3",
                                },
                              ],
                            },
                            "before": Object {
                              "fields": Array [
                                Object {
                                  "component": "input-addon-button-group",
                                  "fields": Array [
                                    Object {
                                      "component": "button",
                                      "label": "Set 1",
                                      "name": "set1",
                                      "onClick": [Function],
                                    },
                                    Object {
                                      "component": "button",
                                      "label": "Set 2",
                                      "name": "set2",
                                    },
                                  ],
                                  "name": "i-a-g-2",
                                },
                              ],
                            },
                          }
                        }
                        label="Text Box With Input Addon"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "modified": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        title="Text Box With Input Addon"
                      >
                        <FieldInterface
                          FieldArrayProvider={[Function]}
                          FieldProvider={[Function]}
                          componentType="text-field"
                          formOptions={
                            Object {
                              "batch": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearOnUnmount": false,
                              "clearedValue": undefined,
                              "concat": [Function],
                              "destroyOnUnregister": false,
                              "focus": [Function],
                              "getFieldState": [Function],
                              "getRegisteredFields": [Function],
                              "getState": [Function],
                              "handleSubmit": [Function],
                              "initialize": [Function],
                              "insert": [Function],
                              "isValidationPaused": [Function],
                              "move": [Function],
                              "onCancel": [Function],
                              "onSubmit": [MockFunction],
                              "pauseValidation": [Function],
                              "pop": [Function],
                              "pristine": true,
                              "push": [Function],
                              "registerField": [Function],
                              "remove": [Function],
                              "removeBatch": [Function],
                              "renderForm": [Function],
                              "reset": [Function],
                              "resetFieldState": [Function],
                              "resumeValidation": [Function],
                              "setConfig": [Function],
                              "shift": [Function],
                              "submit": [Function],
                              "subscribe": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                              "update": [Function],
                              "valid": true,
                            }
                          }
                          input={
                            Object {
                              "name": "text_box_21",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          inputAddon={
                            Object {
                              "after": Object {
                                "fields": Array [
                                  Object {
                                    "component": "input-addon-group",
                                    "fields": Array [
                                      Object {
                                        "component": "plain-text",
                                        "label": "-",
                                        "name": "name1",
                                        "variant": "span",
                                      },
                                    ],
                                    "name": "i-a-g-2",
                                  },
                                  Object {
                                    "component": "input-addon-button-group",
                                    "fields": Array [
                                      Object {
                                        "component": "button",
                                        "label": "Set 3",
                                        "name": "set3",
                                      },
                                    ],
                                    "name": "i-a-g-3",
                                  },
                                ],
                              },
                              "before": Object {
                                "fields": Array [
                                  Object {
                                    "component": "input-addon-button-group",
                                    "fields": Array [
                                      Object {
                                        "component": "button",
                                        "label": "Set 1",
                                        "name": "set1",
                                        "onClick": [Function],
                                      },
                                      Object {
                                        "component": "button",
                                        "label": "Set 2",
                                        "name": "set2",
                                      },
                                    ],
                                    "name": "i-a-g-2",
                                  },
                                ],
                              },
                            }
                          }
                          label="Text Box With Input Addon"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "modified": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          name="text_box_21"
                          title="Text Box With Input Addon"
                        >
                          <FormGroup
                            bsClass="form-group"
                            validationState={null}
                          >
                            <div
                              className="form-group"
                            >
                              <ControlLabel
                                bsClass="control-label"
                                srOnly={false}
                              >
                                <label
                                  className="control-label"
                                >
                                  Text Box With Input Addon
                                </label>
                              </ControlLabel>
                              <InputGroup
                                bsClass="input-group"
                              >
                                <span
                                  className="input-group"
                                >
                                  <FormConditionWrapper>
                                    <FormFieldHideWrapper
                                      hideField={false}
                                    >
                                      <FieldWrapper
                                        component={[Function]}
                                        componentType="input-addon-button-group"
                                        fields={
                                          Array [
                                            Object {
                                              "component": "button",
                                              "label": "Set 1",
                                              "name": "set1",
                                              "onClick": [Function],
                                            },
                                            Object {
                                              "component": "button",
                                              "label": "Set 2",
                                              "name": "set2",
                                            },
                                          ]
                                        }
                                        formOptions={
                                          Object {
                                            "batch": [Function],
                                            "blur": [Function],
                                            "change": [Function],
                                            "clearOnUnmount": false,
                                            "clearedValue": undefined,
                                            "concat": [Function],
                                            "destroyOnUnregister": false,
                                            "focus": [Function],
                                            "getFieldState": [Function],
                                            "getRegisteredFields": [Function],
                                            "getState": [Function],
                                            "handleSubmit": [Function],
                                            "initialize": [Function],
                                            "insert": [Function],
                                            "isValidationPaused": [Function],
                                            "move": [Function],
                                            "onCancel": [Function],
                                            "onSubmit": [MockFunction],
                                            "pauseValidation": [Function],
                                            "pop": [Function],
                                            "pristine": true,
                                            "push": [Function],
                                            "registerField": [Function],
                                            "remove": [Function],
                                            "removeBatch": [Function],
                                            "renderForm": [Function],
                                            "reset": [Function],
                                            "resetFieldState": [Function],
                                            "resumeValidation": [Function],
                                            "setConfig": [Function],
                                            "shift": [Function],
                                            "submit": [Function],
                                            "subscribe": [Function],
                                            "swap": [Function],
                                            "unshift": [Function],
                                            "update": [Function],
                                            "valid": true,
                                          }
                                        }
                                        name="i-a-g-2"
                                        validate={
                                          Array [
                                            undefined,
                                          ]
                                        }
                                      >
                                        <InputAddonButtonGroup
                                          FieldProvider={[Function]}
                                          FormSpyProvider={[Function]}
                                          fields={
                                            Array [
                                              Object {
                                                "component": "button",
                                                "label": "Set 1",
                                                "name": "set1",
                                                "onClick": [Function],
                                              },
                                              Object {
                                                "component": "button",
                                                "label": "Set 2",
                                                "name": "set2",
                                              },
                                            ]
                                          }
                                          formOptions={
                                            Object {
                                              "batch": [Function],
                                              "blur": [Function],
                                              "change": [Function],
                                              "clearOnUnmount": false,
                                              "clearedValue": undefined,
                                              "concat": [Function],
                                              "destroyOnUnregister": false,
                                              "focus": [Function],
                                              "getFieldState": [Function],
                                              "getRegisteredFields": [Function],
                                              "getState": [Function],
                                              "handleSubmit": [Function],
                                              "initialize": [Function],
                                              "insert": [Function],
                                              "isValidationPaused": [Function],
                                              "move": [Function],
                                              "onCancel": [Function],
                                              "onSubmit": [MockFunction],
                                              "pauseValidation": [Function],
                                              "pop": [Function],
                                              "pristine": true,
                                              "push": [Function],
                                              "registerField": [Function],
                                              "remove": [Function],
                                              "removeBatch": [Function],
                                              "renderForm": [Function],
                                              "reset": [Function],
                                              "resetFieldState": [Function],
                                              "resumeValidation": [Function],
                                              "setConfig": [Function],
                                              "shift": [Function],
                                              "submit": [Function],
                                              "subscribe": [Function],
                                              "swap": [Function],
                                              "unshift": [Function],
                                              "update": [Function],
                                              "valid": true,
                                            }
                                          }
                                          name="i-a-g-2"
                                          validate={[Function]}
                                        >
                                          <InputGroupButton
                                            bsClass="input-group-btn"
                                          >
                                            <span
                                              className="input-group-btn"
                                            >
                                              <FormConditionWrapper>
                                                <FormFieldHideWrapper
                                                  hideField={false}
                                                >
                                                  <FieldWrapper
                                                    component={[Function]}
                                                    componentType="button"
                                                    formOptions={
                                                      Object {
                                                        "batch": [Function],
                                                        "blur": [Function],
                                                        "change": [Function],
                                                        "clearOnUnmount": false,
                                                        "clearedValue": undefined,
                                                        "concat": [Function],
                                                        "destroyOnUnregister": false,
                                                        "focus": [Function],
                                                        "getFieldState": [Function],
                                                        "getRegisteredFields": [Function],
                                                        "getState": [Function],
                                                        "handleSubmit": [Function],
                                                        "initialize": [Function],
                                                        "insert": [Function],
                                                        "isValidationPaused": [Function],
                                                        "move": [Function],
                                                        "onCancel": [Function],
                                                        "onSubmit": [MockFunction],
                                                        "pauseValidation": [Function],
                                                        "pop": [Function],
                                                        "pristine": true,
                                                        "push": [Function],
                                                        "registerField": [Function],
                                                        "remove": [Function],
                                                        "removeBatch": [Function],
                                                        "renderForm": [Function],
                                                        "reset": [Function],
                                                        "resetFieldState": [Function],
                                                        "resumeValidation": [Function],
                                                        "setConfig": [Function],
                                                        "shift": [Function],
                                                        "submit": [Function],
                                                        "subscribe": [Function],
                                                        "swap": [Function],
                                                        "unshift": [Function],
                                                        "update": [Function],
                                                        "valid": true,
                                                      }
                                                    }
                                                    label="Set 1"
                                                    name="set1"
                                                    onClick={[Function]}
                                                    validate={
                                                      Array [
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <Button
                                                      FieldProvider={[Function]}
                                                      FormSpyProvider={[Function]}
                                                      className=""
                                                      formOptions={
                                                        Object {
                                                          "batch": [Function],
                                                          "blur": [Function],
                                                          "change": [Function],
                                                          "clearOnUnmount": false,
                                                          "clearedValue": undefined,
                                                          "concat": [Function],
                                                          "destroyOnUnregister": false,
                                                          "focus": [Function],
                                                          "getFieldState": [Function],
                                                          "getRegisteredFields": [Function],
                                                          "getState": [Function],
                                                          "handleSubmit": [Function],
                                                          "initialize": [Function],
                                                          "insert": [Function],
                                                          "isValidationPaused": [Function],
                                                          "move": [Function],
                                                          "onCancel": [Function],
                                                          "onSubmit": [MockFunction],
                                                          "pauseValidation": [Function],
                                                          "pop": [Function],
                                                          "pristine": true,
                                                          "push": [Function],
                                                          "registerField": [Function],
                                                          "remove": [Function],
                                                          "removeBatch": [Function],
                                                          "renderForm": [Function],
                                                          "reset": [Function],
                                                          "resetFieldState": [Function],
                                                          "resumeValidation": [Function],
                                                          "setConfig": [Function],
                                                          "shift": [Function],
                                                          "submit": [Function],
                                                          "subscribe": [Function],
                                                          "swap": [Function],
                                                          "unshift": [Function],
                                                          "update": [Function],
                                                          "valid": true,
                                                        }
                                                      }
                                                      label="Set 1"
                                                      name="set1"
                                                      onClick={[Function]}
                                                      validate={[Function]}
                                                    >
                                                      <Button
                                                        FormSpyProvider={[Function]}
                                                        active={false}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsStyle="default"
                                                        className=""
                                                        disabled={false}
                                                        name="set1"
                                                        onClick={[Function]}
                                                      >
                                                        <button
                                                          FormSpyProvider={[Function]}
                                                          className="btn btn-default"
                                                          disabled={false}
                                                          name="set1"
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          Set 1
                                                        </button>
                                                      </Button>
                                                    </Button>
                                                  </FieldWrapper>
                                                </FormFieldHideWrapper>
                                              </FormConditionWrapper>
                                              <FormConditionWrapper>
                                                <FormFieldHideWrapper
                                                  hideField={false}
                                                >
                                                  <FieldWrapper
                                                    component={[Function]}
                                                    componentType="button"
                                                    formOptions={
                                                      Object {
                                                        "batch": [Function],
                                                        "blur": [Function],
                                                        "change": [Function],
                                                        "clearOnUnmount": false,
                                                        "clearedValue": undefined,
                                                        "concat": [Function],
                                                        "destroyOnUnregister": false,
                                                        "focus": [Function],
                                                        "getFieldState": [Function],
                                                        "getRegisteredFields": [Function],
                                                        "getState": [Function],
                                                        "handleSubmit": [Function],
                                                        "initialize": [Function],
                                                        "insert": [Function],
                                                        "isValidationPaused": [Function],
                                                        "move": [Function],
                                                        "onCancel": [Function],
                                                        "onSubmit": [MockFunction],
                                                        "pauseValidation": [Function],
                                                        "pop": [Function],
                                                        "pristine": true,
                                                        "push": [Function],
                                                        "registerField": [Function],
                                                        "remove": [Function],
                                                        "removeBatch": [Function],
                                                        "renderForm": [Function],
                                                        "reset": [Function],
                                                        "resetFieldState": [Function],
                                                        "resumeValidation": [Function],
                                                        "setConfig": [Function],
                                                        "shift": [Function],
                                                        "submit": [Function],
                                                        "subscribe": [Function],
                                                        "swap": [Function],
                                                        "unshift": [Function],
                                                        "update": [Function],
                                                        "valid": true,
                                                      }
                                                    }
                                                    label="Set 2"
                                                    name="set2"
                                                    validate={
                                                      Array [
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <Button
                                                      FieldProvider={[Function]}
                                                      FormSpyProvider={[Function]}
                                                      className=""
                                                      formOptions={
                                                        Object {
                                                          "batch": [Function],
                                                          "blur": [Function],
                                                          "change": [Function],
                                                          "clearOnUnmount": false,
                                                          "clearedValue": undefined,
                                                          "concat": [Function],
                                                          "destroyOnUnregister": false,
                                                          "focus": [Function],
                                                          "getFieldState": [Function],
                                                          "getRegisteredFields": [Function],
                                                          "getState": [Function],
                                                          "handleSubmit": [Function],
                                                          "initialize": [Function],
                                                          "insert": [Function],
                                                          "isValidationPaused": [Function],
                                                          "move": [Function],
                                                          "onCancel": [Function],
                                                          "onSubmit": [MockFunction],
                                                          "pauseValidation": [Function],
                                                          "pop": [Function],
                                                          "pristine": true,
                                                          "push": [Function],
                                                          "registerField": [Function],
                                                          "remove": [Function],
                                                          "removeBatch": [Function],
                                                          "renderForm": [Function],
                                                          "reset": [Function],
                                                          "resetFieldState": [Function],
                                                          "resumeValidation": [Function],
                                                          "setConfig": [Function],
                                                          "shift": [Function],
                                                          "submit": [Function],
                                                          "subscribe": [Function],
                                                          "swap": [Function],
                                                          "unshift": [Function],
                                                          "update": [Function],
                                                          "valid": true,
                                                        }
                                                      }
                                                      label="Set 2"
                                                      name="set2"
                                                      validate={[Function]}
                                                    >
                                                      <Button
                                                        FormSpyProvider={[Function]}
                                                        active={false}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsStyle="default"
                                                        className=""
                                                        disabled={false}
                                                        name="set2"
                                                      >
                                                        <button
                                                          FormSpyProvider={[Function]}
                                                          className="btn btn-default"
                                                          disabled={false}
                                                          name="set2"
                                                          type="button"
                                                        >
                                                          Set 2
                                                        </button>
                                                      </Button>
                                                    </Button>
                                                  </FieldWrapper>
                                                </FormFieldHideWrapper>
                                              </FormConditionWrapper>
                                            </span>
                                          </InputGroupButton>
                                        </InputAddonButtonGroup>
                                      </FieldWrapper>
                                    </FormFieldHideWrapper>
                                  </FormConditionWrapper>
                                  <FormControl
                                    bsClass="form-control"
                                    componentClass="input"
                                    id="text_box_21"
                                    name="text_box_21"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    title="Text Box With Input Addon"
                                    value=""
                                  >
                                    <input
                                      className="form-control"
                                      id="text_box_21"
                                      name="text_box_21"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      title="Text Box With Input Addon"
                                      value=""
                                    />
                                  </FormControl>
                                  <FormConditionWrapper>
                                    <FormFieldHideWrapper
                                      hideField={false}
                                    >
                                      <FieldWrapper
                                        component={[Function]}
                                        componentType="input-addon-group"
                                        fields={
                                          Array [
                                            Object {
                                              "component": "plain-text",
                                              "label": "-",
                                              "name": "name1",
                                              "variant": "span",
                                            },
                                          ]
                                        }
                                        formOptions={
                                          Object {
                                            "batch": [Function],
                                            "blur": [Function],
                                            "change": [Function],
                                            "clearOnUnmount": false,
                                            "clearedValue": undefined,
                                            "concat": [Function],
                                            "destroyOnUnregister": false,
                                            "focus": [Function],
                                            "getFieldState": [Function],
                                            "getRegisteredFields": [Function],
                                            "getState": [Function],
                                            "handleSubmit": [Function],
                                            "initialize": [Function],
                                            "insert": [Function],
                                            "isValidationPaused": [Function],
                                            "move": [Function],
                                            "onCancel": [Function],
                                            "onSubmit": [MockFunction],
                                            "pauseValidation": [Function],
                                            "pop": [Function],
                                            "pristine": true,
                                            "push": [Function],
                                            "registerField": [Function],
                                            "remove": [Function],
                                            "removeBatch": [Function],
                                            "renderForm": [Function],
                                            "reset": [Function],
                                            "resetFieldState": [Function],
                                            "resumeValidation": [Function],
                                            "setConfig": [Function],
                                            "shift": [Function],
                                            "submit": [Function],
                                            "subscribe": [Function],
                                            "swap": [Function],
                                            "unshift": [Function],
                                            "update": [Function],
                                            "valid": true,
                                          }
                                        }
                                        name="i-a-g-2"
                                        validate={
                                          Array [
                                            undefined,
                                          ]
                                        }
                                      >
                                        <InputAddonGroup
                                          FieldProvider={[Function]}
                                          FormSpyProvider={[Function]}
                                          fields={
                                            Array [
                                              Object {
                                                "component": "plain-text",
                                                "label": "-",
                                                "name": "name1",
                                                "variant": "span",
                                              },
                                            ]
                                          }
                                          formOptions={
                                            Object {
                                              "batch": [Function],
                                              "blur": [Function],
                                              "change": [Function],
                                              "clearOnUnmount": false,
                                              "clearedValue": undefined,
                                              "concat": [Function],
                                              "destroyOnUnregister": false,
                                              "focus": [Function],
                                              "getFieldState": [Function],
                                              "getRegisteredFields": [Function],
                                              "getState": [Function],
                                              "handleSubmit": [Function],
                                              "initialize": [Function],
                                              "insert": [Function],
                                              "isValidationPaused": [Function],
                                              "move": [Function],
                                              "onCancel": [Function],
                                              "onSubmit": [MockFunction],
                                              "pauseValidation": [Function],
                                              "pop": [Function],
                                              "pristine": true,
                                              "push": [Function],
                                              "registerField": [Function],
                                              "remove": [Function],
                                              "removeBatch": [Function],
                                              "renderForm": [Function],
                                              "reset": [Function],
                                              "resetFieldState": [Function],
                                              "resumeValidation": [Function],
                                              "setConfig": [Function],
                                              "shift": [Function],
                                              "submit": [Function],
                                              "subscribe": [Function],
                                              "swap": [Function],
                                              "unshift": [Function],
                                              "update": [Function],
                                              "valid": true,
                                            }
                                          }
                                          name="i-a-g-2"
                                          validate={[Function]}
                                        >
                                          <InputGroupAddon
                                            bsClass="input-group-addon"
                                          >
                                            <span
                                              className="input-group-addon"
                                            >
                                              <FormConditionWrapper>
                                                <FormFieldHideWrapper
                                                  hideField={false}
                                                >
                                                  <FieldWrapper
                                                    component={[Function]}
                                                    componentType="plain-text"
                                                    formOptions={
                                                      Object {
                                                        "batch": [Function],
                                                        "blur": [Function],
                                                        "change": [Function],
                                                        "clearOnUnmount": false,
                                                        "clearedValue": undefined,
                                                        "concat": [Function],
                                                        "destroyOnUnregister": false,
                                                        "focus": [Function],
                                                        "getFieldState": [Function],
                                                        "getRegisteredFields": [Function],
                                                        "getState": [Function],
                                                        "handleSubmit": [Function],
                                                        "initialize": [Function],
                                                        "insert": [Function],
                                                        "isValidationPaused": [Function],
                                                        "move": [Function],
                                                        "onCancel": [Function],
                                                        "onSubmit": [MockFunction],
                                                        "pauseValidation": [Function],
                                                        "pop": [Function],
                                                        "pristine": true,
                                                        "push": [Function],
                                                        "registerField": [Function],
                                                        "remove": [Function],
                                                        "removeBatch": [Function],
                                                        "renderForm": [Function],
                                                        "reset": [Function],
                                                        "resetFieldState": [Function],
                                                        "resumeValidation": [Function],
                                                        "setConfig": [Function],
                                                        "shift": [Function],
                                                        "submit": [Function],
                                                        "subscribe": [Function],
                                                        "swap": [Function],
                                                        "unshift": [Function],
                                                        "update": [Function],
                                                        "valid": true,
                                                      }
                                                    }
                                                    label="-"
                                                    name="name1"
                                                    validate={
                                                      Array [
                                                        undefined,
                                                      ]
                                                    }
                                                    variant="span"
                                                  >
                                                    <PlainText
                                                      FieldProvider={[Function]}
                                                      FormSpyProvider={[Function]}
                                                      formOptions={
                                                        Object {
                                                          "batch": [Function],
                                                          "blur": [Function],
                                                          "change": [Function],
                                                          "clearOnUnmount": false,
                                                          "clearedValue": undefined,
                                                          "concat": [Function],
                                                          "destroyOnUnregister": false,
                                                          "focus": [Function],
                                                          "getFieldState": [Function],
                                                          "getRegisteredFields": [Function],
                                                          "getState": [Function],
                                                          "handleSubmit": [Function],
                                                          "initialize": [Function],
                                                          "insert": [Function],
                                                          "isValidationPaused": [Function],
                                                          "move": [Function],
                                                          "onCancel": [Function],
                                                          "onSubmit": [MockFunction],
                                                          "pauseValidation": [Function],
                                                          "pop": [Function],
                                                          "pristine": true,
                                                          "push": [Function],
                                                          "registerField": [Function],
                                                          "remove": [Function],
                                                          "removeBatch": [Function],
                                                          "renderForm": [Function],
                                                          "reset": [Function],
                                                          "resetFieldState": [Function],
                                                          "resumeValidation": [Function],
                                                          "setConfig": [Function],
                                                          "shift": [Function],
                                                          "submit": [Function],
                                                          "subscribe": [Function],
                                                          "swap": [Function],
                                                          "unshift": [Function],
                                                          "update": [Function],
                                                          "valid": true,
                                                        }
                                                      }
                                                      label="-"
                                                      name="name1"
                                                      validate={[Function]}
                                                      variant="span"
                                                    >
                                                      <span
                                                        key="name1-0"
                                                      >
                                                        -
                                                      </span>
                                                    </PlainText>
                                                  </FieldWrapper>
                                                </FormFieldHideWrapper>
                                              </FormConditionWrapper>
                                            </span>
                                          </InputGroupAddon>
                                        </InputAddonGroup>
                                      </FieldWrapper>
                                    </FormFieldHideWrapper>
                                  </FormConditionWrapper>
                                  <FormConditionWrapper>
                                    <FormFieldHideWrapper
                                      hideField={false}
                                    >
                                      <FieldWrapper
                                        component={[Function]}
                                        componentType="input-addon-button-group"
                                        fields={
                                          Array [
                                            Object {
                                              "component": "button",
                                              "label": "Set 3",
                                              "name": "set3",
                                            },
                                          ]
                                        }
                                        formOptions={
                                          Object {
                                            "batch": [Function],
                                            "blur": [Function],
                                            "change": [Function],
                                            "clearOnUnmount": false,
                                            "clearedValue": undefined,
                                            "concat": [Function],
                                            "destroyOnUnregister": false,
                                            "focus": [Function],
                                            "getFieldState": [Function],
                                            "getRegisteredFields": [Function],
                                            "getState": [Function],
                                            "handleSubmit": [Function],
                                            "initialize": [Function],
                                            "insert": [Function],
                                            "isValidationPaused": [Function],
                                            "move": [Function],
                                            "onCancel": [Function],
                                            "onSubmit": [MockFunction],
                                            "pauseValidation": [Function],
                                            "pop": [Function],
                                            "pristine": true,
                                            "push": [Function],
                                            "registerField": [Function],
                                            "remove": [Function],
                                            "removeBatch": [Function],
                                            "renderForm": [Function],
                                            "reset": [Function],
                                            "resetFieldState": [Function],
                                            "resumeValidation": [Function],
                                            "setConfig": [Function],
                                            "shift": [Function],
                                            "submit": [Function],
                                            "subscribe": [Function],
                                            "swap": [Function],
                                            "unshift": [Function],
                                            "update": [Function],
                                            "valid": true,
                                          }
                                        }
                                        name="i-a-g-3"
                                        validate={
                                          Array [
                                            undefined,
                                          ]
                                        }
                                      >
                                        <InputAddonButtonGroup
                                          FieldProvider={[Function]}
                                          FormSpyProvider={[Function]}
                                          fields={
                                            Array [
                                              Object {
                                                "component": "button",
                                                "label": "Set 3",
                                                "name": "set3",
                                              },
                                            ]
                                          }
                                          formOptions={
                                            Object {
                                              "batch": [Function],
                                              "blur": [Function],
                                              "change": [Function],
                                              "clearOnUnmount": false,
                                              "clearedValue": undefined,
                                              "concat": [Function],
                                              "destroyOnUnregister": false,
                                              "focus": [Function],
                                              "getFieldState": [Function],
                                              "getRegisteredFields": [Function],
                                              "getState": [Function],
                                              "handleSubmit": [Function],
                                              "initialize": [Function],
                                              "insert": [Function],
                                              "isValidationPaused": [Function],
                                              "move": [Function],
                                              "onCancel": [Function],
                                              "onSubmit": [MockFunction],
                                              "pauseValidation": [Function],
                                              "pop": [Function],
                                              "pristine": true,
                                              "push": [Function],
                                              "registerField": [Function],
                                              "remove": [Function],
                                              "removeBatch": [Function],
                                              "renderForm": [Function],
                                              "reset": [Function],
                                              "resetFieldState": [Function],
                                              "resumeValidation": [Function],
                                              "setConfig": [Function],
                                              "shift": [Function],
                                              "submit": [Function],
                                              "subscribe": [Function],
                                              "swap": [Function],
                                              "unshift": [Function],
                                              "update": [Function],
                                              "valid": true,
                                            }
                                          }
                                          name="i-a-g-3"
                                          validate={[Function]}
                                        >
                                          <InputGroupButton
                                            bsClass="input-group-btn"
                                          >
                                            <span
                                              className="input-group-btn"
                                            >
                                              <FormConditionWrapper>
                                                <FormFieldHideWrapper
                                                  hideField={false}
                                                >
                                                  <FieldWrapper
                                                    component={[Function]}
                                                    componentType="button"
                                                    formOptions={
                                                      Object {
                                                        "batch": [Function],
                                                        "blur": [Function],
                                                        "change": [Function],
                                                        "clearOnUnmount": false,
                                                        "clearedValue": undefined,
                                                        "concat": [Function],
                                                        "destroyOnUnregister": false,
                                                        "focus": [Function],
                                                        "getFieldState": [Function],
                                                        "getRegisteredFields": [Function],
                                                        "getState": [Function],
                                                        "handleSubmit": [Function],
                                                        "initialize": [Function],
                                                        "insert": [Function],
                                                        "isValidationPaused": [Function],
                                                        "move": [Function],
                                                        "onCancel": [Function],
                                                        "onSubmit": [MockFunction],
                                                        "pauseValidation": [Function],
                                                        "pop": [Function],
                                                        "pristine": true,
                                                        "push": [Function],
                                                        "registerField": [Function],
                                                        "remove": [Function],
                                                        "removeBatch": [Function],
                                                        "renderForm": [Function],
                                                        "reset": [Function],
                                                        "resetFieldState": [Function],
                                                        "resumeValidation": [Function],
                                                        "setConfig": [Function],
                                                        "shift": [Function],
                                                        "submit": [Function],
                                                        "subscribe": [Function],
                                                        "swap": [Function],
                                                        "unshift": [Function],
                                                        "update": [Function],
                                                        "valid": true,
                                                      }
                                                    }
                                                    label="Set 3"
                                                    name="set3"
                                                    validate={
                                                      Array [
                                                        undefined,
                                                      ]
                                                    }
                                                  >
                                                    <Button
                                                      FieldProvider={[Function]}
                                                      FormSpyProvider={[Function]}
                                                      className=""
                                                      formOptions={
                                                        Object {
                                                          "batch": [Function],
                                                          "blur": [Function],
                                                          "change": [Function],
                                                          "clearOnUnmount": false,
                                                          "clearedValue": undefined,
                                                          "concat": [Function],
                                                          "destroyOnUnregister": false,
                                                          "focus": [Function],
                                                          "getFieldState": [Function],
                                                          "getRegisteredFields": [Function],
                                                          "getState": [Function],
                                                          "handleSubmit": [Function],
                                                          "initialize": [Function],
                                                          "insert": [Function],
                                                          "isValidationPaused": [Function],
                                                          "move": [Function],
                                                          "onCancel": [Function],
                                                          "onSubmit": [MockFunction],
                                                          "pauseValidation": [Function],
                                                          "pop": [Function],
                                                          "pristine": true,
                                                          "push": [Function],
                                                          "registerField": [Function],
                                                          "remove": [Function],
                                                          "removeBatch": [Function],
                                                          "renderForm": [Function],
                                                          "reset": [Function],
                                                          "resetFieldState": [Function],
                                                          "resumeValidation": [Function],
                                                          "setConfig": [Function],
                                                          "shift": [Function],
                                                          "submit": [Function],
                                                          "subscribe": [Function],
                                                          "swap": [Function],
                                                          "unshift": [Function],
                                                          "update": [Function],
                                                          "valid": true,
                                                        }
                                                      }
                                                      label="Set 3"
                                                      name="set3"
                                                      validate={[Function]}
                                                    >
                                                      <Button
                                                        FormSpyProvider={[Function]}
                                                        active={false}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsStyle="default"
                                                        className=""
                                                        disabled={false}
                                                        name="set3"
                                                      >
                                                        <button
                                                          FormSpyProvider={[Function]}
                                                          className="btn btn-default"
                                                          disabled={false}
                                                          name="set3"
                                                          type="button"
                                                        >
                                                          Set 3
                                                        </button>
                                                      </Button>
                                                    </Button>
                                                  </FieldWrapper>
                                                </FormFieldHideWrapper>
                                              </FormConditionWrapper>
                                            </span>
                                          </InputGroupButton>
                                        </InputAddonButtonGroup>
                                      </FieldWrapper>
                                    </FormFieldHideWrapper>
                                  </FormConditionWrapper>
                                </span>
                              </InputGroup>
                            </div>
                          </FormGroup>
                        </FieldInterface>
                      </TextField>
                    </Field>
                  </ReactFinalForm(Field)>
                </FieldProvider>
              </FieldWrapper>
            </FormFieldHideWrapper>
          </FormConditionWrapper>
        </form>
      </Form>
    </FormWapper>
  </ReactFinalForm>
</FormRenderer>
`;
